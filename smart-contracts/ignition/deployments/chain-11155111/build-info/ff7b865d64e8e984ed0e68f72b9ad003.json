{
  "id": "ff7b865d64e8e984ed0e68f72b9ad003",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.26",
  "solcLongVersion": "0.8.26+commit.8a97fa7a",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "contracts/BulkSender.sol": {
        "content": "pragma solidity ^0.8.26;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"./IBulkSender.sol\";\n\ncontract BulkSender is Ownable, IBulkSender {\n        \n    address public receiverAddress;\n\n    uint public txFee = 0.01 ether;\n    uint public VIPFee = 0.1 ether;\n\n    mapping(address => bool) public vipList;\n\n    modifier onlyAllowedAccount(){\n        require(isVIP(msg.sender) || msg.value >= txFee, NotAllowedAccount());\n        if (!isVIP(msg.sender)) {\n            payable(receiverAddress).transfer(msg.value);\n        }\n        _;\n    }\n\n    constructor(address _receiverAddress) Ownable(msg.sender) {\n        receiverAddress = _receiverAddress;\n    }\n\n    /*\n    *  Register VIP\n    */\n    function registerVIP() payable public {\n        require(msg.value >= VIPFee, InsufficientFunds(msg.value, VIPFee));\n        require(!isVIP(msg.sender), AlreadyVIP());\n        payable(receiverAddress).transfer(msg.value);        \n        vipList[msg.sender] = true;\n        emit LogViPRegistered(msg.sender, msg.value);\n    }\n\n    /*\n    * Remove address from VIP List by Owner\n  */\n    function removeFromVIPList(address[] calldata _vipList) onlyOwner public {\n        for (uint i = 0; i < _vipList.length; i++) {\n            vipList[_vipList[i]] = false;\n        }\n    }\n\n    /*\n    *@dev check if the address is VIP\n    */\n    function isVIP(address _addr) public view returns(bool) {\n        return vipList[_addr];\n    }\n\n    /*\n    *@dev set receiver address\n    */\n    function setReceiverAddress(address _addr) onlyOwner public {\n        require(_addr != address(0));\n        receiverAddress = _addr;\n    }\n\n    /*\n        *@dev set vip fee\n    */\n    function setVIPFee(uint _fee) onlyOwner public {\n        VIPFee = _fee;\n    }\n\n    /*\n    * @dev set tx fee    \n    */\n    function setTxFee(uint _fee) onlyOwner public {\n        txFee = _fee;\n    }\n\n    /**\n     * @dev bulk transfer erc20 tokens with same value\n     * @param _tokenAddress address of the token\n     * @param _receivers array of receivers\n     * @param _value amount of tokens to send\n     */\n    function bulkTransferERC20(address _tokenAddress, address[] calldata _receivers, uint _value) external payable onlyAllowedAccount() {\n\n        IERC20 token = IERC20(_tokenAddress);\n\n        for (uint i = 0; i < _receivers.length; i++) {\n            token.transferFrom(msg.sender, _receivers[i], _value);\n        }\n        emit LogTokenBulkSent(_tokenAddress, _receivers.length);\n    }\n\n     /**\n     * @dev bulk transfer erc20 tokens with different values\n     * @param _tokenAddress address of the token\n     * @param _receivers array of receivers\n     * @param _values amounts of tokens to send\n     */\n    function bulkTransferERC20(address _tokenAddress, address[] calldata _receivers, uint[] calldata _values) external payable onlyAllowedAccount() {\n\n        require(_receivers.length == _values.length, InvalidInput());\n        IERC20 token = IERC20(_tokenAddress);\n        \n        for (uint i = 0; i < _receivers.length; i++) {\n            token.transferFrom(msg.sender, _receivers[i], _values[i]);\n        }\n        emit LogTokenBulkSent(_tokenAddress, _receivers.length);\n    }\n\n\n}\n"
      },
      "contracts/IBulkSender.sol": {
        "content": "pragma solidity ^0.8.26;\n\ninterface IBulkSender {\n\n    error Unauthorized();\n    error InvalidInput();\n    error NotAllowedAccount();\n    error InsufficientAllowance(address token, uint256 available, uint256 required);\n    error InsufficientFunds(uint256 available, uint256 required);\n    error NotEnoughTokens(uint256 available, uint256 required);\n    error NotEnoughEther(uint256 available, uint256 required);\n    error NotVIP();\n    error AlreadyVIP();\n    error NotOwner();\n    error AlreadyOwner();\n    error ZeroAddress();\n    error NotContract();\n    error AlreadyContract();\n    error NotNormalAddress();\n    error AlreadyNormalAddress();\n    error NotToken();\n    error AlreadyToken();\n    \n\n    event LogTokenBulkSent(address token, uint256 total);\n    event LogGetToken(address token, address receiver, uint256 balance);\n    event LogViPRegistered(address sender, uint256 value);\n\n    function registerVIP() external payable;\n    function removeFromVIPList(address[] calldata _vipList) external;\n    \n}"
      }
    },
    "settings": {
      "viaIR": true,
      "optimizer": {
        "enabled": true,
        "runs": 200,
        "details": {
          "yulDetails": {
            "optimizerSteps": "u"
          }
        }
      },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "errors": [
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/BulkSender.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/BulkSender.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/IBulkSender.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "contracts/IBulkSender.sol",
          "start": -1
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              255
            ],
            "Ownable": [
              147
            ]
          },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 256,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 255,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": [
                      "692:7:0"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 255,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [
                147,
                255
              ],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 237,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 237,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2337:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                    "typeString": "function (address) pure returns (error)"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_error",
                                  "typeString": "error"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "2603:9:0"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [
                          133
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [
                13,
                18
              ],
              "usedEvents": [
                24
              ]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              225
            ]
          },
          "id": 226,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "106:24:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 150,
                "nodeType": "StructuredDocumentation",
                "src": "132:70:1",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 225,
              "linearizedBaseContracts": [
                225
              ],
              "name": "IERC20",
              "nameLocation": "213:6:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 151,
                    "nodeType": "StructuredDocumentation",
                    "src": "226:158:1",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 159,
                  "name": "Transfer",
                  "nameLocation": "395:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "420:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "404:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "404:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 155,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "442:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "426:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "426:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 157,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "454:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "446:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "446:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "403:57:1"
                  },
                  "src": "389:72:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 160,
                    "nodeType": "StructuredDocumentation",
                    "src": "467:148:1",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 168,
                  "name": "Approval",
                  "nameLocation": "626:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "651:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "635:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "635:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 164,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "674:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "658:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 163,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "658:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 166,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "691:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "683:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "683:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "634:63:1"
                  },
                  "src": "620:78:1"
                },
                {
                  "documentation": {
                    "id": 169,
                    "nodeType": "StructuredDocumentation",
                    "src": "704:65:1",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 174,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "783:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 170,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "794:2:1"
                  },
                  "returnParameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 172,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 174,
                        "src": "820:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "820:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "819:9:1"
                  },
                  "scope": 225,
                  "src": "774:55:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 175,
                    "nodeType": "StructuredDocumentation",
                    "src": "835:71:1",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 182,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "920:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 177,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "938:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "930:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 176,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "930:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "929:17:1"
                  },
                  "returnParameters": {
                    "id": 181,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 180,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "970:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 179,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "970:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "969:9:1"
                  },
                  "scope": 225,
                  "src": "911:68:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 183,
                    "nodeType": "StructuredDocumentation",
                    "src": "985:213:1",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 192,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1212:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1229:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1221:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1221:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1241:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1233:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1233:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1220:27:1"
                  },
                  "returnParameters": {
                    "id": 191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 190,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1266:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1266:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1265:6:1"
                  },
                  "scope": 225,
                  "src": "1203:69:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 193,
                    "nodeType": "StructuredDocumentation",
                    "src": "1278:264:1",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 202,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1556:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 195,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1574:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1566:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1566:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 197,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1589:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1581:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1581:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1565:32:1"
                  },
                  "returnParameters": {
                    "id": 201,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 200,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1621:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1621:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1620:9:1"
                  },
                  "scope": 225,
                  "src": "1547:83:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 203,
                    "nodeType": "StructuredDocumentation",
                    "src": "1636:667:1",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 212,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2317:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 205,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2333:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 212,
                        "src": "2325:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2325:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2350:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 212,
                        "src": "2342:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2342:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2324:32:1"
                  },
                  "returnParameters": {
                    "id": 211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 210,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 212,
                        "src": "2375:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 209,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2375:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2374:6:1"
                  },
                  "scope": 225,
                  "src": "2308:73:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 213,
                    "nodeType": "StructuredDocumentation",
                    "src": "2387:297:1",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 224,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2698:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 215,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2719:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2711:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 214,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2711:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2733:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2725:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2725:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2745:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2737:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2737:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2710:41:1"
                  },
                  "returnParameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2770:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2770:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2769:6:1"
                  },
                  "scope": 225,
                  "src": "2689:87:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 226,
              "src": "203:2575:1",
              "usedErrors": [],
              "usedEvents": [
                159,
                168
              ]
            }
          ],
          "src": "106:2673:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": {
            "Context": [
              255
            ]
          },
          "id": 256,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 227,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".20"
              ],
              "nodeType": "PragmaDirective",
              "src": "101:24:2"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 228,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:2",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 255,
              "linearizedBaseContracts": [
                255
              ],
              "name": "Context",
              "nameLocation": "642:7:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 236,
                    "nodeType": "Block",
                    "src": "718:34:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 233,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 232,
                        "id": 235,
                        "nodeType": "Return",
                        "src": "728:17:2"
                      }
                    ]
                  },
                  "id": 237,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 229,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:2"
                  },
                  "returnParameters": {
                    "id": 232,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 231,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 237,
                        "src": "709:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 230,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:2"
                  },
                  "scope": 255,
                  "src": "656:96:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 245,
                    "nodeType": "Block",
                    "src": "825:32:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 242,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:2",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 241,
                        "id": 244,
                        "nodeType": "Return",
                        "src": "835:15:2"
                      }
                    ]
                  },
                  "id": 246,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 238,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:2"
                  },
                  "returnParameters": {
                    "id": 241,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 240,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 246,
                        "src": "809:14:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 239,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:2"
                  },
                  "scope": 255,
                  "src": "758:99:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 253,
                    "nodeType": "Block",
                    "src": "935:25:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 250,
                        "id": 252,
                        "nodeType": "Return",
                        "src": "945:8:2"
                      }
                    ]
                  },
                  "id": 254,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 247,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:2"
                  },
                  "returnParameters": {
                    "id": 250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 249,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "926:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 248,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:2"
                  },
                  "scope": 255,
                  "src": "863:97:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 256,
              "src": "624:338:2",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:2"
        },
        "id": 2
      },
      "contracts/BulkSender.sol": {
        "ast": {
          "absolutePath": "contracts/BulkSender.sol",
          "exportedSymbols": {
            "BulkSender": [
              576
            ],
            "Context": [
              255
            ],
            "IBulkSender": [
              662
            ],
            "IERC20": [
              225
            ],
            "Ownable": [
              147
            ]
          },
          "id": 577,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 257,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:3"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 258,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 577,
              "sourceUnit": 148,
              "src": "26:52:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 259,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 577,
              "sourceUnit": 226,
              "src": "79:56:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/IBulkSender.sol",
              "file": "./IBulkSender.sol",
              "id": 260,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 577,
              "sourceUnit": 663,
              "src": "136:27:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 261,
                    "name": "Ownable",
                    "nameLocations": [
                      "188:7:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "188:7:3"
                  },
                  "id": 262,
                  "nodeType": "InheritanceSpecifier",
                  "src": "188:7:3"
                },
                {
                  "baseName": {
                    "id": 263,
                    "name": "IBulkSender",
                    "nameLocations": [
                      "197:11:3"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 662,
                    "src": "197:11:3"
                  },
                  "id": 264,
                  "nodeType": "InheritanceSpecifier",
                  "src": "197:11:3"
                }
              ],
              "canonicalName": "BulkSender",
              "contractDependencies": [],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 576,
              "linearizedBaseContracts": [
                576,
                662,
                147,
                255
              ],
              "name": "BulkSender",
              "nameLocation": "174:10:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "16fed3e2",
                  "id": 266,
                  "mutability": "mutable",
                  "name": "receiverAddress",
                  "nameLocation": "239:15:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 576,
                  "src": "224:30:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "224:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "cf820461",
                  "id": 269,
                  "mutability": "mutable",
                  "name": "txFee",
                  "nameLocation": "273:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 576,
                  "src": "261:30:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "302e3031",
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "281:10:3",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_10000000000000000_by_1",
                      "typeString": "int_const 10000000000000000"
                    },
                    "value": "0.01"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "f0a0a299",
                  "id": 272,
                  "mutability": "mutable",
                  "name": "VIPFee",
                  "nameLocation": "309:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 576,
                  "src": "297:30:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 270,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "297:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "302e31",
                    "id": 271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "318:9:3",
                    "subdenomination": "ether",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000000000000000_by_1",
                      "typeString": "int_const 100000000000000000"
                    },
                    "value": "0.1"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "aa168b47",
                  "id": 276,
                  "mutability": "mutable",
                  "name": "vipList",
                  "nameLocation": "366:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 576,
                  "src": "334:39:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                    "typeString": "mapping(address => bool)"
                  },
                  "typeName": {
                    "id": 275,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 273,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "342:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "334:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                      "typeString": "mapping(address => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 274,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "353:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 309,
                    "nodeType": "Block",
                    "src": "409:199:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 280,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "433:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 281,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "437:6:3",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "433:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 279,
                                  "name": "isVIP",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 415,
                                  "src": "427:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view returns (bool)"
                                  }
                                },
                                "id": 282,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "427:17:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 283,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "448:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 284,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "452:5:3",
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "448:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 285,
                                  "name": "txFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 269,
                                  "src": "461:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "448:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "427:39:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 288,
                                "name": "NotAllowedAccount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 584,
                                "src": "468:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                  "typeString": "function () pure returns (error)"
                                }
                              },
                              "id": 289,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "468:19:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_error",
                                "typeString": "error"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_error",
                                "typeString": "error"
                              }
                            ],
                            "id": 278,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "419:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
                              "typeString": "function (bool,error) pure"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "419:69:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 291,
                        "nodeType": "ExpressionStatement",
                        "src": "419:69:3"
                      },
                      {
                        "condition": {
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "502:18:3",
                          "subExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 293,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "509:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "513:6:3",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "509:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 292,
                              "name": "isVIP",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 415,
                              "src": "503:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                "typeString": "function (address) view returns (bool)"
                              }
                            },
                            "id": 295,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "503:17:3",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 307,
                        "nodeType": "IfStatement",
                        "src": "498:93:3",
                        "trueBody": {
                          "id": 306,
                          "nodeType": "Block",
                          "src": "522:69:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 302,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "570:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 303,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "574:5:3",
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "src": "570:9:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 299,
                                        "name": "receiverAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 266,
                                        "src": "544:15:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 298,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "536:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                        "typeString": "type(address payable)"
                                      },
                                      "typeName": {
                                        "id": 297,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "536:8:3",
                                        "stateMutability": "payable",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 300,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "536:24:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  },
                                  "id": 301,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "561:8:3",
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "src": "536:33:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 304,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "536:44:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 305,
                              "nodeType": "ExpressionStatement",
                              "src": "536:44:3"
                            }
                          ]
                        }
                      },
                      {
                        "id": 308,
                        "nodeType": "PlaceholderStatement",
                        "src": "600:1:3"
                      }
                    ]
                  },
                  "id": 310,
                  "name": "onlyAllowedAccount",
                  "nameLocation": "389:18:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 277,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "407:2:3"
                  },
                  "src": "380:228:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 323,
                    "nodeType": "Block",
                    "src": "672:51:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 319,
                            "name": "receiverAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "682:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 320,
                            "name": "_receiverAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 312,
                            "src": "700:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "682:34:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 322,
                        "nodeType": "ExpressionStatement",
                        "src": "682:34:3"
                      }
                    ]
                  },
                  "id": 324,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 315,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "660:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "664:6:3",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "660:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 317,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 314,
                        "name": "Ownable",
                        "nameLocations": [
                          "652:7:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "652:7:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "652:19:3"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 313,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 312,
                        "mutability": "mutable",
                        "name": "_receiverAddress",
                        "nameLocation": "634:16:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 324,
                        "src": "626:24:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 311,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "626:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "625:26:3"
                  },
                  "returnParameters": {
                    "id": 318,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "672:0:3"
                  },
                  "scope": 576,
                  "src": "614:109:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    655
                  ],
                  "body": {
                    "id": 372,
                    "nodeType": "Block",
                    "src": "801:286:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 331,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 328,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "819:3:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 329,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "823:5:3",
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "819:9:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 330,
                                "name": "VIPFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 272,
                                "src": "832:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "819:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 333,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "858:3:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 334,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "862:5:3",
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "src": "858:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "id": 335,
                                  "name": "VIPFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 272,
                                  "src": "869:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 332,
                                "name": "InsufficientFunds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 598,
                                "src": "840:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
                                  "typeString": "function (uint256,uint256) pure returns (error)"
                                }
                              },
                              "id": 336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "840:36:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_error",
                                "typeString": "error"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_error",
                                "typeString": "error"
                              }
                            ],
                            "id": 327,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "811:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
                              "typeString": "function (bool,error) pure"
                            }
                          },
                          "id": 337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "811:66:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 338,
                        "nodeType": "ExpressionStatement",
                        "src": "811:66:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "895:18:3",
                              "subExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 341,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "902:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 342,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "906:6:3",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "902:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 340,
                                  "name": "isVIP",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 415,
                                  "src": "896:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                                    "typeString": "function (address) view returns (bool)"
                                  }
                                },
                                "id": 343,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "896:17:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 345,
                                "name": "AlreadyVIP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 614,
                                "src": "915:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                  "typeString": "function () pure returns (error)"
                                }
                              },
                              "id": 346,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "915:12:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_error",
                                "typeString": "error"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_error",
                                "typeString": "error"
                              }
                            ],
                            "id": 339,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "887:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
                              "typeString": "function (bool,error) pure"
                            }
                          },
                          "id": 347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "887:41:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 348,
                        "nodeType": "ExpressionStatement",
                        "src": "887:41:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 354,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "972:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "976:5:3",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "972:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 351,
                                  "name": "receiverAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 266,
                                  "src": "946:15:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "938:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 349,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "938:8:3",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "938:24:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 353,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "963:8:3",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "938:33:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "938:44:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 357,
                        "nodeType": "ExpressionStatement",
                        "src": "938:44:3"
                      },
                      {
                        "expression": {
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 358,
                              "name": "vipList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 276,
                              "src": "1000:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 361,
                            "indexExpression": {
                              "expression": {
                                "id": 359,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1008:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 360,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1012:6:3",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1008:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1000:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1022:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1000:26:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 364,
                        "nodeType": "ExpressionStatement",
                        "src": "1000:26:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 366,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1058:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1062:6:3",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1058:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 368,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1070:3:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 369,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1074:5:3",
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "1070:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 365,
                            "name": "LogViPRegistered",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 652,
                            "src": "1041:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1041:39:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 371,
                        "nodeType": "EmitStatement",
                        "src": "1036:44:3"
                      }
                    ]
                  },
                  "functionSelector": "9c1f6133",
                  "id": 373,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerVIP",
                  "nameLocation": "772:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 325,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "783:2:3"
                  },
                  "returnParameters": {
                    "id": 326,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "801:0:3"
                  },
                  "scope": 576,
                  "src": "763:324:3",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    661
                  ],
                  "body": {
                    "id": 402,
                    "nodeType": "Block",
                    "src": "1222:112:3",
                    "statements": [
                      {
                        "body": {
                          "id": 400,
                          "nodeType": "Block",
                          "src": "1275:53:3",
                          "statements": [
                            {
                              "expression": {
                                "id": 398,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 392,
                                    "name": "vipList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 276,
                                    "src": "1289:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                      "typeString": "mapping(address => bool)"
                                    }
                                  },
                                  "id": 396,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 393,
                                      "name": "_vipList",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 376,
                                      "src": "1297:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 395,
                                    "indexExpression": {
                                      "id": 394,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 382,
                                      "src": "1306:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "1297:11:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1289:20:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 397,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1312:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "1289:28:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 399,
                              "nodeType": "ExpressionStatement",
                              "src": "1289:28:3"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 385,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 382,
                            "src": "1249:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 386,
                              "name": "_vipList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 376,
                              "src": "1253:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1262:6:3",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "1253:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1249:19:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 401,
                        "initializationExpression": {
                          "assignments": [
                            382
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 382,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "1242:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 401,
                              "src": "1237:6:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 381,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "1237:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 384,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 383,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1246:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "1237:10:3"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "1270:3:3",
                            "subExpression": {
                              "id": 389,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 382,
                              "src": "1270:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 391,
                          "nodeType": "ExpressionStatement",
                          "src": "1270:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "1232:96:3"
                      }
                    ]
                  },
                  "functionSelector": "f48d11af",
                  "id": 403,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 379,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 378,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1205:9:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "1205:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1205:9:3"
                    }
                  ],
                  "name": "removeFromVIPList",
                  "nameLocation": "1158:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 377,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 376,
                        "mutability": "mutable",
                        "name": "_vipList",
                        "nameLocation": "1195:8:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 403,
                        "src": "1176:27:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 374,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1176:7:3",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 375,
                          "nodeType": "ArrayTypeName",
                          "src": "1176:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1175:29:3"
                  },
                  "returnParameters": {
                    "id": 380,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1222:0:3"
                  },
                  "scope": 576,
                  "src": "1149:185:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 414,
                    "nodeType": "Block",
                    "src": "1448:38:3",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 410,
                            "name": "vipList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 276,
                            "src": "1465:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 412,
                          "indexExpression": {
                            "id": 411,
                            "name": "_addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 405,
                            "src": "1473:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1465:14:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 409,
                        "id": 413,
                        "nodeType": "Return",
                        "src": "1458:21:3"
                      }
                    ]
                  },
                  "functionSelector": "f4201c3c",
                  "id": 415,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isVIP",
                  "nameLocation": "1401:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 406,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 405,
                        "mutability": "mutable",
                        "name": "_addr",
                        "nameLocation": "1415:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 415,
                        "src": "1407:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 404,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1407:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1406:15:3"
                  },
                  "returnParameters": {
                    "id": 409,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 408,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 415,
                        "src": "1442:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 407,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1442:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1441:6:3"
                  },
                  "scope": 576,
                  "src": "1392:94:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 435,
                    "nodeType": "Block",
                    "src": "1597:78:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 423,
                                "name": "_addr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 417,
                                "src": "1615:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 426,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1632:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 425,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1624:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 424,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1624:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 427,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1624:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1615:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 422,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1607:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1607:28:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 430,
                        "nodeType": "ExpressionStatement",
                        "src": "1607:28:3"
                      },
                      {
                        "expression": {
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 431,
                            "name": "receiverAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "1645:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 432,
                            "name": "_addr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 417,
                            "src": "1663:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1645:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 434,
                        "nodeType": "ExpressionStatement",
                        "src": "1645:23:3"
                      }
                    ]
                  },
                  "functionSelector": "8279c7db",
                  "id": 436,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 420,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 419,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1580:9:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "1580:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1580:9:3"
                    }
                  ],
                  "name": "setReceiverAddress",
                  "nameLocation": "1546:18:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 417,
                        "mutability": "mutable",
                        "name": "_addr",
                        "nameLocation": "1573:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 436,
                        "src": "1565:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1565:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1564:15:3"
                  },
                  "returnParameters": {
                    "id": 421,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1597:0:3"
                  },
                  "scope": 576,
                  "src": "1537:138:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 447,
                    "nodeType": "Block",
                    "src": "1768:30:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 443,
                            "name": "VIPFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 272,
                            "src": "1778:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 444,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 438,
                            "src": "1787:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1778:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 446,
                        "nodeType": "ExpressionStatement",
                        "src": "1778:13:3"
                      }
                    ]
                  },
                  "functionSelector": "3d06242a",
                  "id": 448,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 441,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 440,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1751:9:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "1751:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1751:9:3"
                    }
                  ],
                  "name": "setVIPFee",
                  "nameLocation": "1730:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 439,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 438,
                        "mutability": "mutable",
                        "name": "_fee",
                        "nameLocation": "1745:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "1740:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 437,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1740:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1739:11:3"
                  },
                  "returnParameters": {
                    "id": 442,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1768:0:3"
                  },
                  "scope": 576,
                  "src": "1721:77:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 459,
                    "nodeType": "Block",
                    "src": "1890:29:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 455,
                            "name": "txFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 269,
                            "src": "1900:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 456,
                            "name": "_fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 450,
                            "src": "1908:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1900:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 458,
                        "nodeType": "ExpressionStatement",
                        "src": "1900:12:3"
                      }
                    ]
                  },
                  "functionSelector": "f05d16f7",
                  "id": 460,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 453,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 452,
                        "name": "onlyOwner",
                        "nameLocations": [
                          "1873:9:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "1873:9:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1873:9:3"
                    }
                  ],
                  "name": "setTxFee",
                  "nameLocation": "1853:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 451,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 450,
                        "mutability": "mutable",
                        "name": "_fee",
                        "nameLocation": "1867:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 460,
                        "src": "1862:9:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 449,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1862:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1861:11:3"
                  },
                  "returnParameters": {
                    "id": 454,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1890:0:3"
                  },
                  "scope": 576,
                  "src": "1844:75:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 510,
                    "nodeType": "Block",
                    "src": "2267:252:3",
                    "statements": [
                      {
                        "assignments": [
                          475
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 475,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "2285:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 510,
                            "src": "2278:12:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$225",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 474,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 473,
                                "name": "IERC20",
                                "nameLocations": [
                                  "2278:6:3"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 225,
                                "src": "2278:6:3"
                              },
                              "referencedDeclaration": 225,
                              "src": "2278:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$225",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 479,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 477,
                              "name": "_tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "2300:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 476,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "2293:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2293:21:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$225",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2278:36:3"
                      },
                      {
                        "body": {
                          "id": 502,
                          "nodeType": "Block",
                          "src": "2370:78:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 494,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2403:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 495,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2407:6:3",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2403:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 496,
                                      "name": "_receivers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 466,
                                      "src": "2415:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 498,
                                    "indexExpression": {
                                      "id": 497,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 481,
                                      "src": "2426:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2415:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 499,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 468,
                                    "src": "2430:6:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 491,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 475,
                                    "src": "2384:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$225",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 493,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2390:12:3",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 224,
                                  "src": "2384:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 500,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2384:53:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 501,
                              "nodeType": "ExpressionStatement",
                              "src": "2384:53:3"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 484,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 481,
                            "src": "2342:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 485,
                              "name": "_receivers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 466,
                              "src": "2346:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2357:6:3",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2346:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2342:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 503,
                        "initializationExpression": {
                          "assignments": [
                            481
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 481,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "2335:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 503,
                              "src": "2330:6:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 480,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "2330:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 483,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2339:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "2330:10:3"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 489,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "2365:3:3",
                            "subExpression": {
                              "id": 488,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 481,
                              "src": "2365:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 490,
                          "nodeType": "ExpressionStatement",
                          "src": "2365:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "2325:123:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 505,
                              "name": "_tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 463,
                              "src": "2479:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 506,
                                "name": "_receivers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 466,
                                "src": "2494:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 507,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2505:6:3",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "2494:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 504,
                            "name": "LogTokenBulkSent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 638,
                            "src": "2462:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2462:50:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 509,
                        "nodeType": "EmitStatement",
                        "src": "2457:55:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 461,
                    "nodeType": "StructuredDocumentation",
                    "src": "1925:205:3",
                    "text": " @dev bulk transfer erc20 tokens with same value\n @param _tokenAddress address of the token\n @param _receivers array of receivers\n @param _value amount of tokens to send"
                  },
                  "functionSelector": "8ce632e8",
                  "id": 511,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 471,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 470,
                        "name": "onlyAllowedAccount",
                        "nameLocations": [
                          "2246:18:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 310,
                        "src": "2246:18:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2246:20:3"
                    }
                  ],
                  "name": "bulkTransferERC20",
                  "nameLocation": "2144:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 469,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 463,
                        "mutability": "mutable",
                        "name": "_tokenAddress",
                        "nameLocation": "2170:13:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 511,
                        "src": "2162:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 462,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2162:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 466,
                        "mutability": "mutable",
                        "name": "_receivers",
                        "nameLocation": "2204:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 511,
                        "src": "2185:29:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 464,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2185:7:3",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 465,
                          "nodeType": "ArrayTypeName",
                          "src": "2185:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 468,
                        "mutability": "mutable",
                        "name": "_value",
                        "nameLocation": "2221:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 511,
                        "src": "2216:11:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 467,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2216:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2161:67:3"
                  },
                  "returnParameters": {
                    "id": 472,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2267:0:3"
                  },
                  "scope": 576,
                  "src": "2135:384:3",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 574,
                    "nodeType": "Block",
                    "src": "2888:334:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 526,
                                  "name": "_receivers",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 517,
                                  "src": "2907:10:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                    "typeString": "address[] calldata"
                                  }
                                },
                                "id": 527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2918:6:3",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2907:17:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 528,
                                  "name": "_values",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 520,
                                  "src": "2928:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                    "typeString": "uint256[] calldata"
                                  }
                                },
                                "id": 529,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2936:6:3",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "2928:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "2907:35:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 531,
                                "name": "InvalidInput",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 582,
                                "src": "2944:12:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
                                  "typeString": "function () pure returns (error)"
                                }
                              },
                              "id": 532,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2944:14:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_error",
                                "typeString": "error"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_error",
                                "typeString": "error"
                              }
                            ],
                            "id": 525,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2899:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_error_$returns$__$",
                              "typeString": "function (bool,error) pure"
                            }
                          },
                          "id": 533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2899:60:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 534,
                        "nodeType": "ExpressionStatement",
                        "src": "2899:60:3"
                      },
                      {
                        "assignments": [
                          537
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 537,
                            "mutability": "mutable",
                            "name": "token",
                            "nameLocation": "2976:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 574,
                            "src": "2969:12:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$225",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 536,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 535,
                                "name": "IERC20",
                                "nameLocations": [
                                  "2969:6:3"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 225,
                                "src": "2969:6:3"
                              },
                              "referencedDeclaration": 225,
                              "src": "2969:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$225",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 541,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 539,
                              "name": "_tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 514,
                              "src": "2991:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 538,
                            "name": "IERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "2984:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
                              "typeString": "type(contract IERC20)"
                            }
                          },
                          "id": 540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2984:21:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$225",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2969:36:3"
                      },
                      {
                        "body": {
                          "id": 566,
                          "nodeType": "Block",
                          "src": "3069:82:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 556,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "3102:3:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 557,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3106:6:3",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3102:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 558,
                                      "name": "_receivers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 517,
                                      "src": "3114:10:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                        "typeString": "address[] calldata"
                                      }
                                    },
                                    "id": 560,
                                    "indexExpression": {
                                      "id": 559,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 543,
                                      "src": "3125:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3114:13:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 561,
                                      "name": "_values",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 520,
                                      "src": "3129:7:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 563,
                                    "indexExpression": {
                                      "id": 562,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 543,
                                      "src": "3137:1:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3129:10:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 553,
                                    "name": "token",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 537,
                                    "src": "3083:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$225",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 555,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3089:12:3",
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 224,
                                  "src": "3083:18:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 564,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3083:57:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 565,
                              "nodeType": "ExpressionStatement",
                              "src": "3083:57:3"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 546,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 543,
                            "src": "3041:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 547,
                              "name": "_receivers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 517,
                              "src": "3045:10:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                "typeString": "address[] calldata"
                              }
                            },
                            "id": 548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3056:6:3",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3045:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3041:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 567,
                        "initializationExpression": {
                          "assignments": [
                            543
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 543,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3034:1:3",
                              "nodeType": "VariableDeclaration",
                              "scope": 567,
                              "src": "3029:6:3",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 542,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "3029:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 545,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3038:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3029:10:3"
                        },
                        "isSimpleCounterLoop": true,
                        "loopExpression": {
                          "expression": {
                            "id": 551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "3064:3:3",
                            "subExpression": {
                              "id": 550,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 543,
                              "src": "3064:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 552,
                          "nodeType": "ExpressionStatement",
                          "src": "3064:3:3"
                        },
                        "nodeType": "ForStatement",
                        "src": "3024:127:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 569,
                              "name": "_tokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 514,
                              "src": "3182:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 570,
                                "name": "_receivers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 517,
                                "src": "3197:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                                  "typeString": "address[] calldata"
                                }
                              },
                              "id": 571,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3208:6:3",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "3197:17:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 568,
                            "name": "LogTokenBulkSent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 638,
                            "src": "3165:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3165:50:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 573,
                        "nodeType": "EmitStatement",
                        "src": "3160:55:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 512,
                    "nodeType": "StructuredDocumentation",
                    "src": "2526:213:3",
                    "text": " @dev bulk transfer erc20 tokens with different values\n @param _tokenAddress address of the token\n @param _receivers array of receivers\n @param _values amounts of tokens to send"
                  },
                  "functionSelector": "3e46cd53",
                  "id": 575,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [],
                      "id": 523,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 522,
                        "name": "onlyAllowedAccount",
                        "nameLocations": [
                          "2867:18:3"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 310,
                        "src": "2867:18:3"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2867:20:3"
                    }
                  ],
                  "name": "bulkTransferERC20",
                  "nameLocation": "2753:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 521,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 514,
                        "mutability": "mutable",
                        "name": "_tokenAddress",
                        "nameLocation": "2779:13:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "2771:21:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 513,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2771:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 517,
                        "mutability": "mutable",
                        "name": "_receivers",
                        "nameLocation": "2813:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "2794:29:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 515,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2794:7:3",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 516,
                          "nodeType": "ArrayTypeName",
                          "src": "2794:9:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 520,
                        "mutability": "mutable",
                        "name": "_values",
                        "nameLocation": "2841:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 575,
                        "src": "2825:23:3",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 518,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "2825:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 519,
                          "nodeType": "ArrayTypeName",
                          "src": "2825:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2770:79:3"
                  },
                  "returnParameters": {
                    "id": 524,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2888:0:3"
                  },
                  "scope": 576,
                  "src": "2744:478:3",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 577,
              "src": "165:3061:3",
              "usedErrors": [
                13,
                18,
                580,
                582,
                584,
                592,
                598,
                604,
                610,
                612,
                614,
                616,
                618,
                620,
                622,
                624,
                626,
                628,
                630,
                632
              ],
              "usedEvents": [
                24,
                638,
                646,
                652
              ]
            }
          ],
          "src": "0:3227:3"
        },
        "id": 3
      },
      "contracts/IBulkSender.sol": {
        "ast": {
          "absolutePath": "contracts/IBulkSender.sol",
          "exportedSymbols": {
            "IBulkSender": [
              662
            ]
          },
          "id": 663,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 578,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".26"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IBulkSender",
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 662,
              "linearizedBaseContracts": [
                662
              ],
              "name": "IBulkSender",
              "nameLocation": "36:11:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "errorSelector": "82b42900",
                  "id": 580,
                  "name": "Unauthorized",
                  "nameLocation": "61:12:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 579,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "73:2:4"
                  },
                  "src": "55:21:4"
                },
                {
                  "errorSelector": "b4fa3fb3",
                  "id": 582,
                  "name": "InvalidInput",
                  "nameLocation": "87:12:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 581,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "99:2:4"
                  },
                  "src": "81:21:4"
                },
                {
                  "errorSelector": "65d5490e",
                  "id": 584,
                  "name": "NotAllowedAccount",
                  "nameLocation": "113:17:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 583,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "130:2:4"
                  },
                  "src": "107:26:4"
                },
                {
                  "errorSelector": "192b9e4e",
                  "id": 592,
                  "name": "InsufficientAllowance",
                  "nameLocation": "144:21:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 591,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 586,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "174:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 592,
                        "src": "166:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 585,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "166:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 588,
                        "mutability": "mutable",
                        "name": "available",
                        "nameLocation": "189:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 592,
                        "src": "181:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 587,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "181:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 590,
                        "mutability": "mutable",
                        "name": "required",
                        "nameLocation": "208:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 592,
                        "src": "200:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 589,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "200:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "165:52:4"
                  },
                  "src": "138:80:4"
                },
                {
                  "errorSelector": "03eb8b54",
                  "id": 598,
                  "name": "InsufficientFunds",
                  "nameLocation": "229:17:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 597,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 594,
                        "mutability": "mutable",
                        "name": "available",
                        "nameLocation": "255:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 598,
                        "src": "247:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 593,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "247:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 596,
                        "mutability": "mutable",
                        "name": "required",
                        "nameLocation": "274:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 598,
                        "src": "266:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 595,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "266:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "246:37:4"
                  },
                  "src": "223:61:4"
                },
                {
                  "errorSelector": "6584853f",
                  "id": 604,
                  "name": "NotEnoughTokens",
                  "nameLocation": "295:15:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 603,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 600,
                        "mutability": "mutable",
                        "name": "available",
                        "nameLocation": "319:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 604,
                        "src": "311:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 599,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "311:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 602,
                        "mutability": "mutable",
                        "name": "required",
                        "nameLocation": "338:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 604,
                        "src": "330:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 601,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "330:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "310:37:4"
                  },
                  "src": "289:59:4"
                },
                {
                  "errorSelector": "41ba67b6",
                  "id": 610,
                  "name": "NotEnoughEther",
                  "nameLocation": "359:14:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 609,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 606,
                        "mutability": "mutable",
                        "name": "available",
                        "nameLocation": "382:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "374:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 605,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "374:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 608,
                        "mutability": "mutable",
                        "name": "required",
                        "nameLocation": "401:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 610,
                        "src": "393:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 607,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "393:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "373:37:4"
                  },
                  "src": "353:58:4"
                },
                {
                  "errorSelector": "7f37c4b4",
                  "id": 612,
                  "name": "NotVIP",
                  "nameLocation": "422:6:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 611,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "428:2:4"
                  },
                  "src": "416:15:4"
                },
                {
                  "errorSelector": "024b964d",
                  "id": 614,
                  "name": "AlreadyVIP",
                  "nameLocation": "442:10:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 613,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "452:2:4"
                  },
                  "src": "436:19:4"
                },
                {
                  "errorSelector": "30cd7471",
                  "id": 616,
                  "name": "NotOwner",
                  "nameLocation": "466:8:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 615,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "474:2:4"
                  },
                  "src": "460:17:4"
                },
                {
                  "errorSelector": "c0159e0e",
                  "id": 618,
                  "name": "AlreadyOwner",
                  "nameLocation": "488:12:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 617,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "500:2:4"
                  },
                  "src": "482:21:4"
                },
                {
                  "errorSelector": "d92e233d",
                  "id": 620,
                  "name": "ZeroAddress",
                  "nameLocation": "514:11:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 619,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "525:2:4"
                  },
                  "src": "508:20:4"
                },
                {
                  "errorSelector": "6f7c43f1",
                  "id": 622,
                  "name": "NotContract",
                  "nameLocation": "539:11:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 621,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "550:2:4"
                  },
                  "src": "533:20:4"
                },
                {
                  "errorSelector": "a1428d32",
                  "id": 624,
                  "name": "AlreadyContract",
                  "nameLocation": "564:15:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 623,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "579:2:4"
                  },
                  "src": "558:24:4"
                },
                {
                  "errorSelector": "73ade6c0",
                  "id": 626,
                  "name": "NotNormalAddress",
                  "nameLocation": "593:16:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 625,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "609:2:4"
                  },
                  "src": "587:25:4"
                },
                {
                  "errorSelector": "ded03ca5",
                  "id": 628,
                  "name": "AlreadyNormalAddress",
                  "nameLocation": "623:20:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 627,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "643:2:4"
                  },
                  "src": "617:29:4"
                },
                {
                  "errorSelector": "21f2b69c",
                  "id": 630,
                  "name": "NotToken",
                  "nameLocation": "657:8:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 629,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "665:2:4"
                  },
                  "src": "651:17:4"
                },
                {
                  "errorSelector": "8734e6fb",
                  "id": 632,
                  "name": "AlreadyToken",
                  "nameLocation": "679:12:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 631,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "691:2:4"
                  },
                  "src": "673:21:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "e4e3577249108daaa0a07e6d9aabc5fef8e89ec09da3f9dccfe7ef215e4efc12",
                  "id": 638,
                  "name": "LogTokenBulkSent",
                  "nameLocation": "711:16:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 637,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 634,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "736:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 638,
                        "src": "728:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 633,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "728:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 636,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "total",
                        "nameLocation": "751:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 638,
                        "src": "743:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 635,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "743:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "727:30:4"
                  },
                  "src": "705:53:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "c9076fc68f7c8242d2eeb2e0c02b8cafae31bb4fcbe2b89ef1f27846ac6facaf",
                  "id": 646,
                  "name": "LogGetToken",
                  "nameLocation": "769:11:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 645,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 640,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "token",
                        "nameLocation": "789:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 646,
                        "src": "781:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 639,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "781:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 642,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "receiver",
                        "nameLocation": "804:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 646,
                        "src": "796:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 641,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "796:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 644,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "balance",
                        "nameLocation": "822:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 646,
                        "src": "814:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 643,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "814:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "780:50:4"
                  },
                  "src": "763:68:4"
                },
                {
                  "anonymous": false,
                  "eventSelector": "6252330b8ac495908d7082dbcf6cd547affff5896884e8cb9c40d1b216f9f8e8",
                  "id": 652,
                  "name": "LogViPRegistered",
                  "nameLocation": "842:16:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 651,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 648,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "867:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 652,
                        "src": "859:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 647,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "859:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 650,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "883:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 652,
                        "src": "875:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 649,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "875:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "858:31:4"
                  },
                  "src": "836:54:4"
                },
                {
                  "functionSelector": "9c1f6133",
                  "id": 655,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerVIP",
                  "nameLocation": "905:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 653,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "916:2:4"
                  },
                  "returnParameters": {
                    "id": 654,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "935:0:4"
                  },
                  "scope": 662,
                  "src": "896:40:4",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f48d11af",
                  "id": 661,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeFromVIPList",
                  "nameLocation": "950:17:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 659,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 658,
                        "mutability": "mutable",
                        "name": "_vipList",
                        "nameLocation": "987:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 661,
                        "src": "968:27:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 656,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "968:7:4",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 657,
                          "nodeType": "ArrayTypeName",
                          "src": "968:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                            "typeString": "address[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "967:29:4"
                  },
                  "returnParameters": {
                    "id": 660,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1005:0:4"
                  },
                  "scope": 662,
                  "src": "941:65:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 663,
              "src": "26:987:4",
              "usedErrors": [
                580,
                582,
                584,
                592,
                598,
                604,
                610,
                612,
                614,
                616,
                618,
                620,
                622,
                624,
                626,
                628,
                630,
                632
              ],
              "usedEvents": [
                638,
                646,
                652
              ]
            }
          ],
          "src": "0:1013:4"
        },
        "id": 4
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "contracts/BulkSender.sol": {
        "BulkSender": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_receiverAddress",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "AlreadyContract",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "AlreadyNormalAddress",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "AlreadyOwner",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "AlreadyToken",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "AlreadyVIP",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "available",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "required",
                  "type": "uint256"
                }
              ],
              "name": "InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "available",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "required",
                  "type": "uint256"
                }
              ],
              "name": "InsufficientFunds",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidInput",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotAllowedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotContract",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "available",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "required",
                  "type": "uint256"
                }
              ],
              "name": "NotEnoughEther",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "available",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "required",
                  "type": "uint256"
                }
              ],
              "name": "NotEnoughTokens",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotNormalAddress",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotOwner",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotToken",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotVIP",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Unauthorized",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ZeroAddress",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "name": "LogGetToken",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "total",
                  "type": "uint256"
                }
              ],
              "name": "LogTokenBulkSent",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "LogViPRegistered",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "VIPFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "_receivers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "_values",
                  "type": "uint256[]"
                }
              ],
              "name": "bulkTransferERC20",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_tokenAddress",
                  "type": "address"
                },
                {
                  "internalType": "address[]",
                  "name": "_receivers",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "_value",
                  "type": "uint256"
                }
              ],
              "name": "bulkTransferERC20",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                }
              ],
              "name": "isVIP",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "receiverAddress",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "registerVIP",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "_vipList",
                  "type": "address[]"
                }
              ],
              "name": "removeFromVIPList",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_addr",
                  "type": "address"
                }
              ],
              "name": "setReceiverAddress",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_fee",
                  "type": "uint256"
                }
              ],
              "name": "setTxFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "_fee",
                  "type": "uint256"
                }
              ],
              "name": "setVIPFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "txFee",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "vipList",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "abi_decode_address_fromMemory": {
                  "entryPoint": 161,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_address_fromMemory": {
                  "entryPoint": 174,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 444,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 107,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": 129,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by_1": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_t_rational_by": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "constructor_BulkSender": {
                  "entryPoint": 356,
                  "id": 324,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "constructor_IBulkSender": {
                  "entryPoint": 413,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "constructor_Ownable": {
                  "entryPoint": 463,
                  "id": 50,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "convert_address_to_address": {
                  "entryPoint": 324,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 435,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 422,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": 240,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_t_rational_by_to_t_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 315,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 295,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "copy_arguments_for_constructor_object_BulkSender": {
                  "entryPoint": 194,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offsett_address": {
                  "entryPoint": 539,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 69,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_transferOwnership": {
                  "entryPoint": 558,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "identity": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x41": {
                  "entryPoint": 47,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": 548,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 224,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 280,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offsett_address_to_address": {
                  "entryPoint": 333,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_rational_by_to_t_uint256": {
                  "entryPoint": 253,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_rational_by_to_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 144,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [],
              "linkReferences": {},
              "object": "60806040523461002a576100196100146100c2565b610164565b604051610d516102868239610d5190f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761006657604052565b61002f565b9061007f61007860405190565b9283610045565b565b6001600160a01b031690565b90565b6001600160a01b0381160361002a57565b9050519061007f82610090565b9060208282031261002a5761008d916100a1565b61008d610fd7803803806100d58161006b565b9283398101906100ae565b90600019905b9181191691161790565b61008d61008d61008d9290565b9061010d61008d610114926100f0565b82546100e0565b9055565b906001600160a01b03906100e6565b61008d90610081906001600160a01b031682565b61008d90610127565b61008d9061013b565b9061015d61008d61011492610144565b8254610118565b61007f906101713361019d565b610183662386f26fc1000060026100fd565b61019667016345785d8a000060036100fd565b600161014d565b61007f906101cf565b61008161008d61008d9290565b61008d906101a6565b6001600160a01b03909116815260200190565b60006101da816101b3565b6001600160a01b0381166001600160a01b038416146101fe57505061007f9061022e565b631e4fbdf760e01b8252819061021790600483016101bc565b0390fd5b61008d90610081565b61008d905461021b565b61025461024e61023e6000610224565b61024984600061014d565b610144565b91610144565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e061027f60405190565b600090a356fe6080604052600436101561001257600080fd5b60003560e01c806316fed3e2146101025780633d06242a146100fd5780633e46cd53146100f8578063715018a6146100f35780638279c7db146100ee5780638ce632e8146100e95780638da5cb5b146100e45780639c1f6133146100df578063aa168b47146100da578063cf820461146100d5578063f05d16f7146100d0578063f0a0a299146100cb578063f2fde38b146100c6578063f4201c3c146100c15763f48d11af03610112576104db565b61049a565b610482565b610467565b610443565b610418565b6103c9565b610349565b61032e565b610317565b6102ba565b61028e565b610277565b6101ba565b610165565b600091031261011257565b600080fd5b61012c916008021c5b6001600160a01b031690565b90565b9061012c9154610117565b61012c6000600161012f565b61014f90610120565b9052565b6020810192916101639190610146565b565b3461011257610175366004610107565b61018c61018061013a565b60405191829182610153565b0390f35b805b0361011257565b9050359061016382610190565b906020828203126101125761012c91610199565b34610112576101d26101cd3660046101a6565b610548565b604051005b61019281610120565b90503590610163826101d7565b909182601f830112156101125781359167ffffffffffffffff831161011257602001926020830284011161011257565b6060818303126101125761023182826101e0565b92602082013567ffffffffffffffff811161011257836102529184016101ed565b929093604082013567ffffffffffffffff81116101125761027392016101ed565b9091565b6101d261028536600461021d565b9392909261085b565b346101125761029e366004610107565b6101d26108a0565b906020828203126101125761012c916101e0565b34610112576101d26102cd3660046102a6565b610916565b90606082820312610112576102e781836101e0565b92602083013567ffffffffffffffff8111610112578261030e60409461012c9387016101ed565b94909501610199565b6101d26103253660046102d2565b92919091610a48565b346101125761033e366004610107565b61018c610180610a54565b610354366004610107565b6101d2610acb565b61012c90610120906001600160a01b031682565b61012c9061035c565b61012c90610370565b9061038c90610379565b600052602052604060002090565b61012c916008021c5b60ff1690565b9061012c915461039a565b60006103c461012c926004610382565b6103a9565b346101125761018c6103e46103df3660046102a6565b6103b4565b60405191829182901515815260200190565b61012c916008021c81565b9061012c91546103f6565b61012c60006002610401565b3461011257610428366004610107565b61018c61043361040c565b6040519182918290815260200190565b34610112576101d26104563660046101a6565b610b96565b61012c60006003610401565b3461011257610477366004610107565b61018c61043361045b565b34610112576101d26104953660046102a6565b610bf5565b346101125761018c6103e46104b03660046102a6565b610c11565b9060208282031261011257813567ffffffffffffffff81116101125761027392016101ed565b34610112576101d26104ee3660046104b5565b90610c82565b61016390610500610c8c565b61053d565b90600019905b9181191691161790565b61012c61012c61012c9290565b9061053261012c61053992610515565b8254610505565b9055565b610163906003610522565b610163906104f4565b61012c9081565b61012c9054610551565b1561056957565b6332eaa48760e11b6000908152600490fd5b036000fd5b61012c90610120565b61012c9054610580565b6040513d6000823e3d90fd5b939291906105ac33610c11565b8015610614575b6105bc90610562565b6105cc6105c833610c11565b1590565b6105da575b61016394610736565b60008080806105f46105ef6105ef6001610589565b610379565b8190341561060a575b3491f16105d1575b610593565b6108fc91506105fd565b506105bc61062561012c6002610558565b34101590506105b3565b1561063657565b63b4fa3fb360e01b6000908152600490fd5b634e487b7160e01b600052603260045260246000fd5b919081101561066e576020020190565b610648565b3561012c816101d7565b3561012c81610190565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176106bf57604052565b610687565b801515610192565b90505190610163826106c4565b906020828203126101125761012c916106cc565b604090610717610163949695939661070d60608401986000850190610146565b6020830190610146565b0152565b91602061016392949361071760408201966000830190610146565b93909291809561074783881461062f565b61075086610379565b9060009761075e6000610515565b81811015610816578060208b8a8a6107a061079b868d6107956107908f9b8f9c61078a6107ca9e610379565b9961065e565b610673565b9461065e565b61067d565b926107aa60405190565b8097819582946107be6323b872dd60e01b90565b845233600485016106ed565b03925af1918215610605576107e5926107ea575b5060010190565b61075e565b61080a9060203d811161080f575b610802818361069d565b8101906106d9565b6107de565b503d6107f8565b5095509650505050507fe4e3577249108daaa0a07e6d9aabc5fef8e89ec09da3f9dccfe7ef215e4efc129161085661084d60405190565b9283928361071b565b0390a1565b906101639493929161059f565b610870610c8c565b61016361088e565b61012061012c61012c9290565b61012c90610878565b61016361089b6000610885565b610cc9565b610163610868565b610163906108b4610c8c565b6108e6565b1561011257565b906001600160a01b039061050b565b906108df61012c61053992610379565b82546108c0565b6101639061090f6108ff6108fa6000610885565b610120565b61090883610120565b14156108b9565b60016108cf565b610163906108a8565b92919061092b33610c11565b8015610989575b61093b90610562565b6109476105c833610c11565b610955575b610163936109a4565b600080808061096a6105ef6105ef6001610589565b8190341561097f575b3491f161094c57610593565b6108fc9150610973565b5061093b61099a61012c6002610558565b3410159050610932565b92916109af84610379565b6000956109bc6000610515565b83811015610a0b576109ec906020876109d486610379565b6109e2610790858a8c61065e565b8c6107aa60405190565b03925af191821561060557610a06926107ea575060010190565b6109bc565b509550507fe4e3577249108daaa0a07e6d9aabc5fef8e89ec09da3f9dccfe7ef215e4efc12939250610a3b915090565b9061085661084d60405190565b9061016393929161091f565b61012c6000610589565b9081526040810192916101639160200152565b15610a7a575050565b62fae2d560e21b60009081529161057b916004610a5e565b15610a9957565b63024b964d60e01b6000908152600490fd5b9060ff9061050b565b90610ac461012c61053992151590565b8254610aab565b610af0610adb61012c6003610558565b341015610ae86003610558565b903490610a71565b610b04610aff6105c833610c11565b610a92565b6000808080610b196105ef6105ef6001610589565b81903415610b75575b3491f11561060557610b3f6001610b3a336004610382565b610ab4565b7f6252330b8ac495908d7082dbcf6cd547affff5896884e8cb9c40d1b216f9f8e8610b6960405190565b8061085634338361071b565b6108fc9150610b22565b61016390610b8b610c8c565b610163906002610522565b61016390610b7f565b61016390610bab610c8c565b6000610bb681610885565b610bbf81610120565b610bc884610120565b14610bd857505061016390610cc9565b631e4fbdf760e01b82528190610bf19060048301610153565b0390fd5b61016390610b9f565b61012c906103a3565b61012c9054610bfe565b610c2861012c91610c20600090565b506004610382565b610c07565b9061016391610c3a610c8c565b60009291610c4784610515565b81811015610c7b57610c7690610c7086610b3a6004610c6a61079086898b61065e565b90610382565b60010190565b610c47565b5050509050565b9061016391610c2d565b610c94610a54565b3390610ca8610ca283610120565b91610120565b03610cb05750565b63118cdaa760e01b60009081529061057b906004610153565b610cea610ce4610cd96000610589565b6105ef8460006108cf565b91610379565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0610d1560405190565b600090a356fea264697066735822122041be6721677b59efe3ba054dcf2ec924f9e94f03bd5dd1990c181398beda3b4a64736f6c634300081a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE PUSH2 0x2A JUMPI PUSH2 0x19 PUSH2 0x14 PUSH2 0xC2 JUMP JUMPDEST PUSH2 0x164 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD51 PUSH2 0x286 DUP3 CODECOPY PUSH2 0xD51 SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x66 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x2F JUMP JUMPDEST SWAP1 PUSH2 0x7F PUSH2 0x78 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 PUSH2 0x45 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND SUB PUSH2 0x2A JUMPI JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x7F DUP3 PUSH2 0x90 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x2A JUMPI PUSH2 0x8D SWAP2 PUSH2 0xA1 JUMP JUMPDEST PUSH2 0x8D PUSH2 0xFD7 DUP1 CODESIZE SUB DUP1 PUSH2 0xD5 DUP2 PUSH2 0x6B JUMP JUMPDEST SWAP3 DUP4 CODECOPY DUP2 ADD SWAP1 PUSH2 0xAE JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x8D PUSH2 0x8D PUSH2 0x8D SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x10D PUSH2 0x8D PUSH2 0x114 SWAP3 PUSH2 0xF0 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xE0 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0xE6 JUMP JUMPDEST PUSH2 0x8D SWAP1 PUSH2 0x81 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x8D SWAP1 PUSH2 0x127 JUMP JUMPDEST PUSH2 0x8D SWAP1 PUSH2 0x13B JUMP JUMPDEST SWAP1 PUSH2 0x15D PUSH2 0x8D PUSH2 0x114 SWAP3 PUSH2 0x144 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x118 JUMP JUMPDEST PUSH2 0x7F SWAP1 PUSH2 0x171 CALLER PUSH2 0x19D JUMP JUMPDEST PUSH2 0x183 PUSH7 0x2386F26FC10000 PUSH1 0x2 PUSH2 0xFD JUMP JUMPDEST PUSH2 0x196 PUSH8 0x16345785D8A0000 PUSH1 0x3 PUSH2 0xFD JUMP JUMPDEST PUSH1 0x1 PUSH2 0x14D JUMP JUMPDEST PUSH2 0x7F SWAP1 PUSH2 0x1CF JUMP JUMPDEST PUSH2 0x81 PUSH2 0x8D PUSH2 0x8D SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x8D SWAP1 PUSH2 0x1A6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DA DUP2 PUSH2 0x1B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EQ PUSH2 0x1FE JUMPI POP POP PUSH2 0x7F SWAP1 PUSH2 0x22E JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 SWAP1 PUSH2 0x217 SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x1BC JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x8D SWAP1 PUSH2 0x81 JUMP JUMPDEST PUSH2 0x8D SWAP1 SLOAD PUSH2 0x21B JUMP JUMPDEST PUSH2 0x254 PUSH2 0x24E PUSH2 0x23E PUSH1 0x0 PUSH2 0x224 JUMP JUMPDEST PUSH2 0x249 DUP5 PUSH1 0x0 PUSH2 0x14D JUMP JUMPDEST PUSH2 0x144 JUMP JUMPDEST SWAP2 PUSH2 0x144 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0x27F PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16FED3E2 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x3D06242A EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x3E46CD53 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x8279C7DB EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x8CE632E8 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x9C1F6133 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0xAA168B47 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xCF820461 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0xF05D16F7 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0xF0A0A299 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xF4201C3C EQ PUSH2 0xC1 JUMPI PUSH4 0xF48D11AF SUB PUSH2 0x112 JUMPI PUSH2 0x4DB JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH2 0x467 JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH2 0x349 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST PUSH2 0x1BA JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x112 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12C SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x12C SWAP2 SLOAD PUSH2 0x117 JUMP JUMPDEST PUSH2 0x12C PUSH1 0x0 PUSH1 0x1 PUSH2 0x12F JUMP JUMPDEST PUSH2 0x14F SWAP1 PUSH2 0x120 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x146 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x107 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x180 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x153 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x112 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x163 DUP3 PUSH2 0x190 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x112 JUMPI PUSH2 0x12C SWAP2 PUSH2 0x199 JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x1D2 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH2 0x192 DUP2 PUSH2 0x120 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x163 DUP3 PUSH2 0x1D7 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x112 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x112 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x112 JUMPI JUMP JUMPDEST PUSH1 0x60 DUP2 DUP4 SUB SLT PUSH2 0x112 JUMPI PUSH2 0x231 DUP3 DUP3 PUSH2 0x1E0 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x112 JUMPI DUP4 PUSH2 0x252 SWAP2 DUP5 ADD PUSH2 0x1ED JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x112 JUMPI PUSH2 0x273 SWAP3 ADD PUSH2 0x1ED JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x21D JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x85B JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x107 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x8A0 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x112 JUMPI PUSH2 0x12C SWAP2 PUSH2 0x1E0 JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x1D2 PUSH2 0x2CD CALLDATASIZE PUSH1 0x4 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x916 JUMP JUMPDEST SWAP1 PUSH1 0x60 DUP3 DUP3 SUB SLT PUSH2 0x112 JUMPI PUSH2 0x2E7 DUP2 DUP4 PUSH2 0x1E0 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x112 JUMPI DUP3 PUSH2 0x30E PUSH1 0x40 SWAP5 PUSH2 0x12C SWAP4 DUP8 ADD PUSH2 0x1ED JUMP JUMPDEST SWAP5 SWAP1 SWAP6 ADD PUSH2 0x199 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0xA48 JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0x107 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x180 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x107 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0xACB JUMP JUMPDEST PUSH2 0x12C SWAP1 PUSH2 0x120 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x12C SWAP1 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x12C SWAP1 PUSH2 0x370 JUMP JUMPDEST SWAP1 PUSH2 0x38C SWAP1 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x12C SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x12C SWAP2 SLOAD PUSH2 0x39A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C4 PUSH2 0x12C SWAP3 PUSH1 0x4 PUSH2 0x382 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x18C PUSH2 0x3E4 PUSH2 0x3DF CALLDATASIZE PUSH1 0x4 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x12C SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x12C SWAP2 SLOAD PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0x12C PUSH1 0x0 PUSH1 0x2 PUSH2 0x401 JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x107 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x433 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x1D2 PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0xB96 JUMP JUMPDEST PUSH2 0x12C PUSH1 0x0 PUSH1 0x3 PUSH2 0x401 JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x477 CALLDATASIZE PUSH1 0x4 PUSH2 0x107 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x433 PUSH2 0x45B JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x1D2 PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0xBF5 JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x18C PUSH2 0x3E4 PUSH2 0x4B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0xC11 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x112 JUMPI DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x112 JUMPI PUSH2 0x273 SWAP3 ADD PUSH2 0x1ED JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x1D2 PUSH2 0x4EE CALLDATASIZE PUSH1 0x4 PUSH2 0x4B5 JUMP JUMPDEST SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH2 0x500 PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x12C PUSH2 0x12C PUSH2 0x12C SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x532 PUSH2 0x12C PUSH2 0x539 SWAP3 PUSH2 0x515 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x505 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH1 0x3 PUSH2 0x522 JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x12C SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x12C SWAP1 SLOAD PUSH2 0x551 JUMP JUMPDEST ISZERO PUSH2 0x569 JUMPI JUMP JUMPDEST PUSH4 0x32EAA487 PUSH1 0xE1 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x12C SWAP1 PUSH2 0x120 JUMP JUMPDEST PUSH2 0x12C SWAP1 SLOAD PUSH2 0x580 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5AC CALLER PUSH2 0xC11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x614 JUMPI JUMPDEST PUSH2 0x5BC SWAP1 PUSH2 0x562 JUMP JUMPDEST PUSH2 0x5CC PUSH2 0x5C8 CALLER PUSH2 0xC11 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x5DA JUMPI JUMPDEST PUSH2 0x163 SWAP5 PUSH2 0x736 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x5F4 PUSH2 0x5EF PUSH2 0x5EF PUSH1 0x1 PUSH2 0x589 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST DUP2 SWAP1 CALLVALUE ISZERO PUSH2 0x60A JUMPI JUMPDEST CALLVALUE SWAP2 CALL PUSH2 0x5D1 JUMPI JUMPDEST PUSH2 0x593 JUMP JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x5FD JUMP JUMPDEST POP PUSH2 0x5BC PUSH2 0x625 PUSH2 0x12C PUSH1 0x2 PUSH2 0x558 JUMP JUMPDEST CALLVALUE LT ISZERO SWAP1 POP PUSH2 0x5B3 JUMP JUMPDEST ISZERO PUSH2 0x636 JUMPI JUMP JUMPDEST PUSH4 0xB4FA3FB3 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x66E JUMPI PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x648 JUMP JUMPDEST CALLDATALOAD PUSH2 0x12C DUP2 PUSH2 0x1D7 JUMP JUMPDEST CALLDATALOAD PUSH2 0x12C DUP2 PUSH2 0x190 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6BF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x192 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x163 DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x112 JUMPI PUSH2 0x12C SWAP2 PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x717 PUSH2 0x163 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x70D PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x146 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x146 JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x163 SWAP3 SWAP5 SWAP4 PUSH2 0x717 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x146 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 SWAP2 DUP1 SWAP6 PUSH2 0x747 DUP4 DUP9 EQ PUSH2 0x62F JUMP JUMPDEST PUSH2 0x750 DUP7 PUSH2 0x379 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP8 PUSH2 0x75E PUSH1 0x0 PUSH2 0x515 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x816 JUMPI DUP1 PUSH1 0x20 DUP12 DUP11 DUP11 PUSH2 0x7A0 PUSH2 0x79B DUP7 DUP14 PUSH2 0x795 PUSH2 0x790 DUP16 SWAP12 DUP16 SWAP13 PUSH2 0x78A PUSH2 0x7CA SWAP15 PUSH2 0x379 JUMP JUMPDEST SWAP10 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST SWAP5 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x67D JUMP JUMPDEST SWAP3 PUSH2 0x7AA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP8 DUP2 SWAP6 DUP3 SWAP5 PUSH2 0x7BE PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD PUSH2 0x6ED JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x605 JUMPI PUSH2 0x7E5 SWAP3 PUSH2 0x7EA JUMPI JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x75E JUMP JUMPDEST PUSH2 0x80A SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x80F JUMPI JUMPDEST PUSH2 0x802 DUP2 DUP4 PUSH2 0x69D JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x7F8 JUMP JUMPDEST POP SWAP6 POP SWAP7 POP POP POP POP POP PUSH32 0xE4E3577249108DAAA0A07E6D9AABC5FEF8E89EC09DA3F9DCCFE7EF215E4EFC12 SWAP2 PUSH2 0x856 PUSH2 0x84D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x71B JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST SWAP1 PUSH2 0x163 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x59F JUMP JUMPDEST PUSH2 0x870 PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x163 PUSH2 0x88E JUMP JUMPDEST PUSH2 0x120 PUSH2 0x12C PUSH2 0x12C SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x12C SWAP1 PUSH2 0x878 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x89B PUSH1 0x0 PUSH2 0x885 JUMP JUMPDEST PUSH2 0xCC9 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH2 0x8B4 PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x8E6 JUMP JUMPDEST ISZERO PUSH2 0x112 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x50B JUMP JUMPDEST SWAP1 PUSH2 0x8DF PUSH2 0x12C PUSH2 0x539 SWAP3 PUSH2 0x379 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x8C0 JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH2 0x90F PUSH2 0x8FF PUSH2 0x8FA PUSH1 0x0 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x120 JUMP JUMPDEST PUSH2 0x908 DUP4 PUSH2 0x120 JUMP JUMPDEST EQ ISZERO PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH2 0x8A8 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x92B CALLER PUSH2 0xC11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x989 JUMPI JUMPDEST PUSH2 0x93B SWAP1 PUSH2 0x562 JUMP JUMPDEST PUSH2 0x947 PUSH2 0x5C8 CALLER PUSH2 0xC11 JUMP JUMPDEST PUSH2 0x955 JUMPI JUMPDEST PUSH2 0x163 SWAP4 PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x96A PUSH2 0x5EF PUSH2 0x5EF PUSH1 0x1 PUSH2 0x589 JUMP JUMPDEST DUP2 SWAP1 CALLVALUE ISZERO PUSH2 0x97F JUMPI JUMPDEST CALLVALUE SWAP2 CALL PUSH2 0x94C JUMPI PUSH2 0x593 JUMP JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x973 JUMP JUMPDEST POP PUSH2 0x93B PUSH2 0x99A PUSH2 0x12C PUSH1 0x2 PUSH2 0x558 JUMP JUMPDEST CALLVALUE LT ISZERO SWAP1 POP PUSH2 0x932 JUMP JUMPDEST SWAP3 SWAP2 PUSH2 0x9AF DUP5 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x0 SWAP6 PUSH2 0x9BC PUSH1 0x0 PUSH2 0x515 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA0B JUMPI PUSH2 0x9EC SWAP1 PUSH1 0x20 DUP8 PUSH2 0x9D4 DUP7 PUSH2 0x379 JUMP JUMPDEST PUSH2 0x9E2 PUSH2 0x790 DUP6 DUP11 DUP13 PUSH2 0x65E JUMP JUMPDEST DUP13 PUSH2 0x7AA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x605 JUMPI PUSH2 0xA06 SWAP3 PUSH2 0x7EA JUMPI POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST POP SWAP6 POP POP PUSH32 0xE4E3577249108DAAA0A07E6D9AABC5FEF8E89EC09DA3F9DCCFE7EF215E4EFC12 SWAP4 SWAP3 POP PUSH2 0xA3B SWAP2 POP SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x856 PUSH2 0x84D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x163 SWAP4 SWAP3 SWAP2 PUSH2 0x91F JUMP JUMPDEST PUSH2 0x12C PUSH1 0x0 PUSH2 0x589 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x163 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0xA7A JUMPI POP POP JUMP JUMPDEST PUSH3 0xFAE2D5 PUSH1 0xE2 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 PUSH2 0x57B SWAP2 PUSH1 0x4 PUSH2 0xA5E JUMP JUMPDEST ISZERO PUSH2 0xA99 JUMPI JUMP JUMPDEST PUSH4 0x24B964D PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x50B JUMP JUMPDEST SWAP1 PUSH2 0xAC4 PUSH2 0x12C PUSH2 0x539 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xAAB JUMP JUMPDEST PUSH2 0xAF0 PUSH2 0xADB PUSH2 0x12C PUSH1 0x3 PUSH2 0x558 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xAE8 PUSH1 0x3 PUSH2 0x558 JUMP JUMPDEST SWAP1 CALLVALUE SWAP1 PUSH2 0xA71 JUMP JUMPDEST PUSH2 0xB04 PUSH2 0xAFF PUSH2 0x5C8 CALLER PUSH2 0xC11 JUMP JUMPDEST PUSH2 0xA92 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xB19 PUSH2 0x5EF PUSH2 0x5EF PUSH1 0x1 PUSH2 0x589 JUMP JUMPDEST DUP2 SWAP1 CALLVALUE ISZERO PUSH2 0xB75 JUMPI JUMPDEST CALLVALUE SWAP2 CALL ISZERO PUSH2 0x605 JUMPI PUSH2 0xB3F PUSH1 0x1 PUSH2 0xB3A CALLER PUSH1 0x4 PUSH2 0x382 JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST PUSH32 0x6252330B8AC495908D7082DBCF6CD547AFFFF5896884E8CB9C40D1B216F9F8E8 PUSH2 0xB69 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x856 CALLVALUE CALLER DUP4 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0xB22 JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH2 0xB8B PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH1 0x2 PUSH2 0x522 JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH2 0xBAB PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB6 DUP2 PUSH2 0x885 JUMP JUMPDEST PUSH2 0xBBF DUP2 PUSH2 0x120 JUMP JUMPDEST PUSH2 0xBC8 DUP5 PUSH2 0x120 JUMP JUMPDEST EQ PUSH2 0xBD8 JUMPI POP POP PUSH2 0x163 SWAP1 PUSH2 0xCC9 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 SWAP1 PUSH2 0xBF1 SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x153 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x163 SWAP1 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x12C SWAP1 PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x12C SWAP1 SLOAD PUSH2 0xBFE JUMP JUMPDEST PUSH2 0xC28 PUSH2 0x12C SWAP2 PUSH2 0xC20 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x382 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST SWAP1 PUSH2 0x163 SWAP2 PUSH2 0xC3A PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 PUSH2 0xC47 DUP5 PUSH2 0x515 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC7B JUMPI PUSH2 0xC76 SWAP1 PUSH2 0xC70 DUP7 PUSH2 0xB3A PUSH1 0x4 PUSH2 0xC6A PUSH2 0x790 DUP7 DUP10 DUP12 PUSH2 0x65E JUMP JUMPDEST SWAP1 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0xC47 JUMP JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST SWAP1 PUSH2 0x163 SWAP2 PUSH2 0xC2D JUMP JUMPDEST PUSH2 0xC94 PUSH2 0xA54 JUMP JUMPDEST CALLER SWAP1 PUSH2 0xCA8 PUSH2 0xCA2 DUP4 PUSH2 0x120 JUMP JUMPDEST SWAP2 PUSH2 0x120 JUMP JUMPDEST SUB PUSH2 0xCB0 JUMPI POP JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x57B SWAP1 PUSH1 0x4 PUSH2 0x153 JUMP JUMPDEST PUSH2 0xCEA PUSH2 0xCE4 PUSH2 0xCD9 PUSH1 0x0 PUSH2 0x589 JUMP JUMPDEST PUSH2 0x5EF DUP5 PUSH1 0x0 PUSH2 0x8CF JUMP JUMPDEST SWAP2 PUSH2 0x379 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0xD15 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xBE PUSH8 0x21677B59EFE3BA05 0x4D 0xCF 0x2E 0xC9 0x24 0xF9 0xE9 0x4F SUB 0xBD TSTORE 0xD1 SWAP10 0xC XOR SGT SWAP9 0xBE 0xDA EXTCODESIZE BLOBBASEFEE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
              "sourceMap": "165:3061:3:-:0;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;165:3061:3;;;;;;-1:-1:-1;;;;;165:3061:3;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;-1:-1:-1;;;;;165:3061:3;;:::o;:::-;;:::o;:::-;-1:-1:-1;;;;;165:3061:3;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;-1:-1:-1;;165:3061:3;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;-1:-1:-1;;;;;165:3061:3;;;;;;;;-1:-1:-1;;;;;165:3061:3;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::i;614:109::-;682:34;614:109;;660:10;614:109;:::i;:::-;281:10;;;;:::i;:::-;318:9;;;;:::i;:::-;682:34;;:::i;26:987:4:-;;;;:::i;165:3061:3:-;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;165:3061:3;;;;;;;;:::o;1225:187:0:-;1297:1;1289:10;;;:::i;:::-;-1:-1:-1;;;;;165:3061:3;;-1:-1:-1;;;;;165:3061:3;;1273:26:0;1269:95;;1392:12;;;;;:::i;1269:95::-;-1:-1:-1;;;1322:31:0;;;;;;;;;;:::i;:::-;;;;165:3061:3;;;;;;;;;;:::i;2912:187:0:-;3052:40;;3004:6;;;:::i;:::-;3020:17;;;;:::i;:::-;3052:40;:::i;:::-;;;:::i;:::-;;;;165:3061:3;;;;3052:40:0;;;;2912:187::o"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "abi_decode": {
                  "entryPoint": 263,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 480,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_addresst_array_address_dyn_calldatat_array_uint256_dyn_calldata": {
                  "entryPoint": 541,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 5
                },
                "abi_decode_addresst_array_address_dyn_calldatat_uint256": {
                  "entryPoint": 722,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 4
                },
                "abi_decode_array_address_dyn_calldata": {
                  "entryPoint": 493,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_array_address_dyn_calldata_ptr": {
                  "entryPoint": 1205,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_array_uint256_dyn_calldata": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_bool_fromMemory": {
                  "entryPoint": 1753,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_t_bool_fromMemory": {
                  "entryPoint": 1740,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_address": {
                  "entryPoint": 678,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_uint256": {
                  "entryPoint": 422,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_uint256": {
                  "entryPoint": 409,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_address": {
                  "entryPoint": 326,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_address_address_uint256": {
                  "entryPoint": 1773,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_address_uint256": {
                  "entryPoint": 1819,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_bool_to_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_tuple": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_address": {
                  "entryPoint": 339,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_uint256_to_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "abi_encode_uint256_uint256": {
                  "entryPoint": 2654,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "allocate_unbounded": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "array_length_array_address_dyn_calldata": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "array_length_array_uint256_dyn_calldata": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "calldata_array_index_access_address_dyn_calldata": {
                  "entryPoint": 1630,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "calldata_array_index_access_uint256_dyn_calldata": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "cleanup_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_from_storage_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_rational_by": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint160": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "cleanup_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_payable_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_address": {
                  "entryPoint": 889,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_address_payable": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_address_to_contract_IERC20": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_bool_to_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_contract_IERC20_to_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_address": {
                  "entryPoint": 2181,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint160": {
                  "entryPoint": 2168,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_rational_by_to_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address": {
                  "entryPoint": 880,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_address_payable": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_contract_IERC20": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint160_to_uint160": {
                  "entryPoint": 860,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "convert_uint256_to_uint256": {
                  "entryPoint": 1301,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "external_fun_VIPFee": {
                  "entryPoint": 1127,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_bulkTransferERC20": {
                  "entryPoint": 631,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_bulkTransferERC20_511": {
                  "entryPoint": 791,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_isVIP": {
                  "entryPoint": 1178,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_owner": {
                  "entryPoint": 814,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_receiverAddress": {
                  "entryPoint": 357,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_registerVIP": {
                  "entryPoint": 841,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_removeFromVIPList": {
                  "entryPoint": 1243,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_renounceOwnership": {
                  "entryPoint": 654,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_setReceiverAddress": {
                  "entryPoint": 698,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_setTxFee": {
                  "entryPoint": 1091,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_setVIPFee": {
                  "entryPoint": 442,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_transferOwnership": {
                  "entryPoint": 1154,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_txFee": {
                  "entryPoint": 1048,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "external_fun_vipList": {
                  "entryPoint": 969,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "extract_from_storage_value_dynamict_address": {
                  "entryPoint": 279,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_dynamict_bool": {
                  "entryPoint": 922,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_dynamict_uint256": {
                  "entryPoint": 1014,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offsett_address": {
                  "entryPoint": 1408,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offsett_bool": {
                  "entryPoint": 3070,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_from_storage_value_offsett_uint256": {
                  "entryPoint": 1361,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "finalize_allocation": {
                  "entryPoint": 1693,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun__transferOwnership": {
                  "entryPoint": 3273,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_bulkTransferERC20": {
                  "entryPoint": 2632,
                  "id": 511,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "fun_bulkTransferERC20_575": {
                  "entryPoint": 2139,
                  "id": 575,
                  "parameterSlots": 5,
                  "returnSlots": 0
                },
                "fun_bulkTransferERC20_575_inner": {
                  "entryPoint": 1846,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 0
                },
                "fun_bulkTransferERC20_inner": {
                  "entryPoint": 2468,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "fun_checkOwner": {
                  "entryPoint": 3212,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_isVIP": {
                  "entryPoint": 3089,
                  "id": 415,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "fun_msgSender": {
                  "entryPoint": null,
                  "id": 237,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_owner": {
                  "entryPoint": 2644,
                  "id": 67,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "fun_registerVIP": {
                  "entryPoint": 2763,
                  "id": 373,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_removeFromVIPList": {
                  "entryPoint": 3202,
                  "id": 403,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_removeFromVIPList_inner": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "fun_renounceOwnership": {
                  "entryPoint": 2208,
                  "id": 98,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_renounceOwnership_inner": {
                  "entryPoint": 2190,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "fun_setReceiverAddress": {
                  "entryPoint": 2326,
                  "id": 436,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_setReceiverAddress_inner": {
                  "entryPoint": 2278,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_setTxFee": {
                  "entryPoint": 2966,
                  "id": 460,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_setTxFee_inner": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_setVIPFee": {
                  "entryPoint": 1352,
                  "id": 448,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_setVIPFee_inner": {
                  "entryPoint": 1341,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_transferOwnership": {
                  "entryPoint": 3061,
                  "id": 126,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "fun_transferOwnership_inner": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "getter_fun_VIPFee": {
                  "entryPoint": 1115,
                  "id": 272,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_receiverAddress": {
                  "entryPoint": 314,
                  "id": 266,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_txFee": {
                  "entryPoint": 1036,
                  "id": 269,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "getter_fun_vipList": {
                  "entryPoint": 948,
                  "id": 276,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "identity": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "increment_wrapping_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "mapping_index_access_mapping_address_bool_of_address": {
                  "entryPoint": 898,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "modifier_onlyAllowedAccount": {
                  "entryPoint": 1439,
                  "id": 310,
                  "parameterSlots": 5,
                  "returnSlots": 0
                },
                "modifier_onlyAllowedAccount_471": {
                  "entryPoint": 2335,
                  "id": 310,
                  "parameterSlots": 4,
                  "returnSlots": 0
                },
                "modifier_onlyOwner": {
                  "entryPoint": 2152,
                  "id": 58,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_104": {
                  "entryPoint": 2975,
                  "id": 58,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_379": {
                  "entryPoint": 3117,
                  "id": 58,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_420": {
                  "entryPoint": 2216,
                  "id": 58,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_441": {
                  "entryPoint": 1268,
                  "id": 58,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "modifier_onlyOwner_453": {
                  "entryPoint": 2943,
                  "id": 58,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 1608,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 1671,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "prepare_store_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "prepare_store_uint256": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_calldatat_address": {
                  "entryPoint": 1651,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_calldatat_uint256": {
                  "entryPoint": 1661,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_address": {
                  "entryPoint": 303,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_bool": {
                  "entryPoint": 937,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_dynamic_uint256": {
                  "entryPoint": 1025,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_address": {
                  "entryPoint": 1417,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_bool": {
                  "entryPoint": 3079,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "read_from_storage_split_offset_uint256": {
                  "entryPoint": 1368,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "require_helper": {
                  "entryPoint": 2233,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_error_AlreadyVIP": {
                  "entryPoint": 2706,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_error_InsufficientFunds_uint256_uint256": {
                  "entryPoint": 2673,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "require_helper_error_InvalidInput": {
                  "entryPoint": 1583,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "require_helper_error_NotAllowedAccount": {
                  "entryPoint": 1378,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_42b3090547df1d2001c96683413b8cf91c1b902ef5e3cb8d9f6f304cf7446f74": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_ca66f745a3ce8ff40e2ccaf1ad45db7774001b90d25810abd9040049be7bf4bb": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "revert_forward": {
                  "entryPoint": 1427,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "round_up_to_mul_of": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_left_224": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_0_unsigned": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "shift_right_unsigned_dynamic": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_20_shift": {
                  "entryPoint": 2240,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift": {
                  "entryPoint": 1285,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_byte_slice_shift_0": {
                  "entryPoint": 2731,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "update_storage_value_offsett_address_to_address": {
                  "entryPoint": 2255,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_bool_to_bool": {
                  "entryPoint": 2740,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "update_storage_value_offsett_uint256_to_uint256": {
                  "entryPoint": 1314,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "validator_revert_address": {
                  "entryPoint": 471,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_bool": {
                  "entryPoint": 1732,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "validator_revert_uint256": {
                  "entryPoint": 400,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "zero_value_for_split_address": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "zero_value_for_split_bool": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 1
                }
              },
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436101561001257600080fd5b60003560e01c806316fed3e2146101025780633d06242a146100fd5780633e46cd53146100f8578063715018a6146100f35780638279c7db146100ee5780638ce632e8146100e95780638da5cb5b146100e45780639c1f6133146100df578063aa168b47146100da578063cf820461146100d5578063f05d16f7146100d0578063f0a0a299146100cb578063f2fde38b146100c6578063f4201c3c146100c15763f48d11af03610112576104db565b61049a565b610482565b610467565b610443565b610418565b6103c9565b610349565b61032e565b610317565b6102ba565b61028e565b610277565b6101ba565b610165565b600091031261011257565b600080fd5b61012c916008021c5b6001600160a01b031690565b90565b9061012c9154610117565b61012c6000600161012f565b61014f90610120565b9052565b6020810192916101639190610146565b565b3461011257610175366004610107565b61018c61018061013a565b60405191829182610153565b0390f35b805b0361011257565b9050359061016382610190565b906020828203126101125761012c91610199565b34610112576101d26101cd3660046101a6565b610548565b604051005b61019281610120565b90503590610163826101d7565b909182601f830112156101125781359167ffffffffffffffff831161011257602001926020830284011161011257565b6060818303126101125761023182826101e0565b92602082013567ffffffffffffffff811161011257836102529184016101ed565b929093604082013567ffffffffffffffff81116101125761027392016101ed565b9091565b6101d261028536600461021d565b9392909261085b565b346101125761029e366004610107565b6101d26108a0565b906020828203126101125761012c916101e0565b34610112576101d26102cd3660046102a6565b610916565b90606082820312610112576102e781836101e0565b92602083013567ffffffffffffffff8111610112578261030e60409461012c9387016101ed565b94909501610199565b6101d26103253660046102d2565b92919091610a48565b346101125761033e366004610107565b61018c610180610a54565b610354366004610107565b6101d2610acb565b61012c90610120906001600160a01b031682565b61012c9061035c565b61012c90610370565b9061038c90610379565b600052602052604060002090565b61012c916008021c5b60ff1690565b9061012c915461039a565b60006103c461012c926004610382565b6103a9565b346101125761018c6103e46103df3660046102a6565b6103b4565b60405191829182901515815260200190565b61012c916008021c81565b9061012c91546103f6565b61012c60006002610401565b3461011257610428366004610107565b61018c61043361040c565b6040519182918290815260200190565b34610112576101d26104563660046101a6565b610b96565b61012c60006003610401565b3461011257610477366004610107565b61018c61043361045b565b34610112576101d26104953660046102a6565b610bf5565b346101125761018c6103e46104b03660046102a6565b610c11565b9060208282031261011257813567ffffffffffffffff81116101125761027392016101ed565b34610112576101d26104ee3660046104b5565b90610c82565b61016390610500610c8c565b61053d565b90600019905b9181191691161790565b61012c61012c61012c9290565b9061053261012c61053992610515565b8254610505565b9055565b610163906003610522565b610163906104f4565b61012c9081565b61012c9054610551565b1561056957565b6332eaa48760e11b6000908152600490fd5b036000fd5b61012c90610120565b61012c9054610580565b6040513d6000823e3d90fd5b939291906105ac33610c11565b8015610614575b6105bc90610562565b6105cc6105c833610c11565b1590565b6105da575b61016394610736565b60008080806105f46105ef6105ef6001610589565b610379565b8190341561060a575b3491f16105d1575b610593565b6108fc91506105fd565b506105bc61062561012c6002610558565b34101590506105b3565b1561063657565b63b4fa3fb360e01b6000908152600490fd5b634e487b7160e01b600052603260045260246000fd5b919081101561066e576020020190565b610648565b3561012c816101d7565b3561012c81610190565b634e487b7160e01b600052604160045260246000fd5b90601f01601f1916810190811067ffffffffffffffff8211176106bf57604052565b610687565b801515610192565b90505190610163826106c4565b906020828203126101125761012c916106cc565b604090610717610163949695939661070d60608401986000850190610146565b6020830190610146565b0152565b91602061016392949361071760408201966000830190610146565b93909291809561074783881461062f565b61075086610379565b9060009761075e6000610515565b81811015610816578060208b8a8a6107a061079b868d6107956107908f9b8f9c61078a6107ca9e610379565b9961065e565b610673565b9461065e565b61067d565b926107aa60405190565b8097819582946107be6323b872dd60e01b90565b845233600485016106ed565b03925af1918215610605576107e5926107ea575b5060010190565b61075e565b61080a9060203d811161080f575b610802818361069d565b8101906106d9565b6107de565b503d6107f8565b5095509650505050507fe4e3577249108daaa0a07e6d9aabc5fef8e89ec09da3f9dccfe7ef215e4efc129161085661084d60405190565b9283928361071b565b0390a1565b906101639493929161059f565b610870610c8c565b61016361088e565b61012061012c61012c9290565b61012c90610878565b61016361089b6000610885565b610cc9565b610163610868565b610163906108b4610c8c565b6108e6565b1561011257565b906001600160a01b039061050b565b906108df61012c61053992610379565b82546108c0565b6101639061090f6108ff6108fa6000610885565b610120565b61090883610120565b14156108b9565b60016108cf565b610163906108a8565b92919061092b33610c11565b8015610989575b61093b90610562565b6109476105c833610c11565b610955575b610163936109a4565b600080808061096a6105ef6105ef6001610589565b8190341561097f575b3491f161094c57610593565b6108fc9150610973565b5061093b61099a61012c6002610558565b3410159050610932565b92916109af84610379565b6000956109bc6000610515565b83811015610a0b576109ec906020876109d486610379565b6109e2610790858a8c61065e565b8c6107aa60405190565b03925af191821561060557610a06926107ea575060010190565b6109bc565b509550507fe4e3577249108daaa0a07e6d9aabc5fef8e89ec09da3f9dccfe7ef215e4efc12939250610a3b915090565b9061085661084d60405190565b9061016393929161091f565b61012c6000610589565b9081526040810192916101639160200152565b15610a7a575050565b62fae2d560e21b60009081529161057b916004610a5e565b15610a9957565b63024b964d60e01b6000908152600490fd5b9060ff9061050b565b90610ac461012c61053992151590565b8254610aab565b610af0610adb61012c6003610558565b341015610ae86003610558565b903490610a71565b610b04610aff6105c833610c11565b610a92565b6000808080610b196105ef6105ef6001610589565b81903415610b75575b3491f11561060557610b3f6001610b3a336004610382565b610ab4565b7f6252330b8ac495908d7082dbcf6cd547affff5896884e8cb9c40d1b216f9f8e8610b6960405190565b8061085634338361071b565b6108fc9150610b22565b61016390610b8b610c8c565b610163906002610522565b61016390610b7f565b61016390610bab610c8c565b6000610bb681610885565b610bbf81610120565b610bc884610120565b14610bd857505061016390610cc9565b631e4fbdf760e01b82528190610bf19060048301610153565b0390fd5b61016390610b9f565b61012c906103a3565b61012c9054610bfe565b610c2861012c91610c20600090565b506004610382565b610c07565b9061016391610c3a610c8c565b60009291610c4784610515565b81811015610c7b57610c7690610c7086610b3a6004610c6a61079086898b61065e565b90610382565b60010190565b610c47565b5050509050565b9061016391610c2d565b610c94610a54565b3390610ca8610ca283610120565b91610120565b03610cb05750565b63118cdaa760e01b60009081529061057b906004610153565b610cea610ce4610cd96000610589565b6105ef8460006108cf565b91610379565b907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0610d1560405190565b600090a356fea264697066735822122041be6721677b59efe3ba054dcf2ec924f9e94f03bd5dd1990c181398beda3b4a64736f6c634300081a0033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16FED3E2 EQ PUSH2 0x102 JUMPI DUP1 PUSH4 0x3D06242A EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x3E46CD53 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0xF3 JUMPI DUP1 PUSH4 0x8279C7DB EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x8CE632E8 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xE4 JUMPI DUP1 PUSH4 0x9C1F6133 EQ PUSH2 0xDF JUMPI DUP1 PUSH4 0xAA168B47 EQ PUSH2 0xDA JUMPI DUP1 PUSH4 0xCF820461 EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0xF05D16F7 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0xF0A0A299 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xF4201C3C EQ PUSH2 0xC1 JUMPI PUSH4 0xF48D11AF SUB PUSH2 0x112 JUMPI PUSH2 0x4DB JUMP JUMPDEST PUSH2 0x49A JUMP JUMPDEST PUSH2 0x482 JUMP JUMPDEST PUSH2 0x467 JUMP JUMPDEST PUSH2 0x443 JUMP JUMPDEST PUSH2 0x418 JUMP JUMPDEST PUSH2 0x3C9 JUMP JUMPDEST PUSH2 0x349 JUMP JUMPDEST PUSH2 0x32E JUMP JUMPDEST PUSH2 0x317 JUMP JUMPDEST PUSH2 0x2BA JUMP JUMPDEST PUSH2 0x28E JUMP JUMPDEST PUSH2 0x277 JUMP JUMPDEST PUSH2 0x1BA JUMP JUMPDEST PUSH2 0x165 JUMP JUMPDEST PUSH1 0x0 SWAP2 SUB SLT PUSH2 0x112 JUMPI JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12C SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x12C SWAP2 SLOAD PUSH2 0x117 JUMP JUMPDEST PUSH2 0x12C PUSH1 0x0 PUSH1 0x1 PUSH2 0x12F JUMP JUMPDEST PUSH2 0x14F SWAP1 PUSH2 0x120 JUMP JUMPDEST SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 ADD SWAP3 SWAP2 PUSH2 0x163 SWAP2 SWAP1 PUSH2 0x146 JUMP JUMPDEST JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x107 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x180 PUSH2 0x13A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x153 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP1 JUMPDEST SUB PUSH2 0x112 JUMPI JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x163 DUP3 PUSH2 0x190 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x112 JUMPI PUSH2 0x12C SWAP2 PUSH2 0x199 JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x1D2 PUSH2 0x1CD CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD STOP JUMPDEST PUSH2 0x192 DUP2 PUSH2 0x120 JUMP JUMPDEST SWAP1 POP CALLDATALOAD SWAP1 PUSH2 0x163 DUP3 PUSH2 0x1D7 JUMP JUMPDEST SWAP1 SWAP2 DUP3 PUSH1 0x1F DUP4 ADD SLT ISZERO PUSH2 0x112 JUMPI DUP2 CALLDATALOAD SWAP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT PUSH2 0x112 JUMPI PUSH1 0x20 ADD SWAP3 PUSH1 0x20 DUP4 MUL DUP5 ADD GT PUSH2 0x112 JUMPI JUMP JUMPDEST PUSH1 0x60 DUP2 DUP4 SUB SLT PUSH2 0x112 JUMPI PUSH2 0x231 DUP3 DUP3 PUSH2 0x1E0 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x112 JUMPI DUP4 PUSH2 0x252 SWAP2 DUP5 ADD PUSH2 0x1ED JUMP JUMPDEST SWAP3 SWAP1 SWAP4 PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x112 JUMPI PUSH2 0x273 SWAP3 ADD PUSH2 0x1ED JUMP JUMPDEST SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0x21D JUMP JUMPDEST SWAP4 SWAP3 SWAP1 SWAP3 PUSH2 0x85B JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x29E CALLDATASIZE PUSH1 0x4 PUSH2 0x107 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x8A0 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x112 JUMPI PUSH2 0x12C SWAP2 PUSH2 0x1E0 JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x1D2 PUSH2 0x2CD CALLDATASIZE PUSH1 0x4 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x916 JUMP JUMPDEST SWAP1 PUSH1 0x60 DUP3 DUP3 SUB SLT PUSH2 0x112 JUMPI PUSH2 0x2E7 DUP2 DUP4 PUSH2 0x1E0 JUMP JUMPDEST SWAP3 PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x112 JUMPI DUP3 PUSH2 0x30E PUSH1 0x40 SWAP5 PUSH2 0x12C SWAP4 DUP8 ADD PUSH2 0x1ED JUMP JUMPDEST SWAP5 SWAP1 SWAP6 ADD PUSH2 0x199 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0x325 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D2 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 SWAP2 PUSH2 0xA48 JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x33E CALLDATASIZE PUSH1 0x4 PUSH2 0x107 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x180 PUSH2 0xA54 JUMP JUMPDEST PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x107 JUMP JUMPDEST PUSH2 0x1D2 PUSH2 0xACB JUMP JUMPDEST PUSH2 0x12C SWAP1 PUSH2 0x120 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH2 0x12C SWAP1 PUSH2 0x35C JUMP JUMPDEST PUSH2 0x12C SWAP1 PUSH2 0x370 JUMP JUMPDEST SWAP1 PUSH2 0x38C SWAP1 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x12C SWAP2 PUSH1 0x8 MUL SHR JUMPDEST PUSH1 0xFF AND SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x12C SWAP2 SLOAD PUSH2 0x39A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C4 PUSH2 0x12C SWAP3 PUSH1 0x4 PUSH2 0x382 JUMP JUMPDEST PUSH2 0x3A9 JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x18C PUSH2 0x3E4 PUSH2 0x3DF CALLDATASIZE PUSH1 0x4 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH2 0x12C SWAP2 PUSH1 0x8 MUL SHR DUP2 JUMP JUMPDEST SWAP1 PUSH2 0x12C SWAP2 SLOAD PUSH2 0x3F6 JUMP JUMPDEST PUSH2 0x12C PUSH1 0x0 PUSH1 0x2 PUSH2 0x401 JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x428 CALLDATASIZE PUSH1 0x4 PUSH2 0x107 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x433 PUSH2 0x40C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x1D2 PUSH2 0x456 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A6 JUMP JUMPDEST PUSH2 0xB96 JUMP JUMPDEST PUSH2 0x12C PUSH1 0x0 PUSH1 0x3 PUSH2 0x401 JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x477 CALLDATASIZE PUSH1 0x4 PUSH2 0x107 JUMP JUMPDEST PUSH2 0x18C PUSH2 0x433 PUSH2 0x45B JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x1D2 PUSH2 0x495 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0xBF5 JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x18C PUSH2 0x3E4 PUSH2 0x4B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A6 JUMP JUMPDEST PUSH2 0xC11 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x112 JUMPI DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH2 0x112 JUMPI PUSH2 0x273 SWAP3 ADD PUSH2 0x1ED JUMP JUMPDEST CALLVALUE PUSH2 0x112 JUMPI PUSH2 0x1D2 PUSH2 0x4EE CALLDATASIZE PUSH1 0x4 PUSH2 0x4B5 JUMP JUMPDEST SWAP1 PUSH2 0xC82 JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH2 0x500 PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x53D JUMP JUMPDEST SWAP1 PUSH1 0x0 NOT SWAP1 JUMPDEST SWAP2 DUP2 NOT AND SWAP2 AND OR SWAP1 JUMP JUMPDEST PUSH2 0x12C PUSH2 0x12C PUSH2 0x12C SWAP3 SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x532 PUSH2 0x12C PUSH2 0x539 SWAP3 PUSH2 0x515 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x505 JUMP JUMPDEST SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH1 0x3 PUSH2 0x522 JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH2 0x4F4 JUMP JUMPDEST PUSH2 0x12C SWAP1 DUP2 JUMP JUMPDEST PUSH2 0x12C SWAP1 SLOAD PUSH2 0x551 JUMP JUMPDEST ISZERO PUSH2 0x569 JUMPI JUMP JUMPDEST PUSH4 0x32EAA487 PUSH1 0xE1 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SUB PUSH1 0x0 REVERT JUMPDEST PUSH2 0x12C SWAP1 PUSH2 0x120 JUMP JUMPDEST PUSH2 0x12C SWAP1 SLOAD PUSH2 0x580 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5AC CALLER PUSH2 0xC11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x614 JUMPI JUMPDEST PUSH2 0x5BC SWAP1 PUSH2 0x562 JUMP JUMPDEST PUSH2 0x5CC PUSH2 0x5C8 CALLER PUSH2 0xC11 JUMP JUMPDEST ISZERO SWAP1 JUMP JUMPDEST PUSH2 0x5DA JUMPI JUMPDEST PUSH2 0x163 SWAP5 PUSH2 0x736 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x5F4 PUSH2 0x5EF PUSH2 0x5EF PUSH1 0x1 PUSH2 0x589 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST DUP2 SWAP1 CALLVALUE ISZERO PUSH2 0x60A JUMPI JUMPDEST CALLVALUE SWAP2 CALL PUSH2 0x5D1 JUMPI JUMPDEST PUSH2 0x593 JUMP JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x5FD JUMP JUMPDEST POP PUSH2 0x5BC PUSH2 0x625 PUSH2 0x12C PUSH1 0x2 PUSH2 0x558 JUMP JUMPDEST CALLVALUE LT ISZERO SWAP1 POP PUSH2 0x5B3 JUMP JUMPDEST ISZERO PUSH2 0x636 JUMPI JUMP JUMPDEST PUSH4 0xB4FA3FB3 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x66E JUMPI PUSH1 0x20 MUL ADD SWAP1 JUMP JUMPDEST PUSH2 0x648 JUMP JUMPDEST CALLDATALOAD PUSH2 0x12C DUP2 PUSH2 0x1D7 JUMP JUMPDEST CALLDATALOAD PUSH2 0x12C DUP2 PUSH2 0x190 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD SWAP1 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR PUSH2 0x6BF JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x192 JUMP JUMPDEST SWAP1 POP MLOAD SWAP1 PUSH2 0x163 DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP1 PUSH1 0x20 DUP3 DUP3 SUB SLT PUSH2 0x112 JUMPI PUSH2 0x12C SWAP2 PUSH2 0x6CC JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH2 0x717 PUSH2 0x163 SWAP5 SWAP7 SWAP6 SWAP4 SWAP7 PUSH2 0x70D PUSH1 0x60 DUP5 ADD SWAP9 PUSH1 0x0 DUP6 ADD SWAP1 PUSH2 0x146 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 PUSH2 0x146 JUMP JUMPDEST ADD MSTORE JUMP JUMPDEST SWAP2 PUSH1 0x20 PUSH2 0x163 SWAP3 SWAP5 SWAP4 PUSH2 0x717 PUSH1 0x40 DUP3 ADD SWAP7 PUSH1 0x0 DUP4 ADD SWAP1 PUSH2 0x146 JUMP JUMPDEST SWAP4 SWAP1 SWAP3 SWAP2 DUP1 SWAP6 PUSH2 0x747 DUP4 DUP9 EQ PUSH2 0x62F JUMP JUMPDEST PUSH2 0x750 DUP7 PUSH2 0x379 JUMP JUMPDEST SWAP1 PUSH1 0x0 SWAP8 PUSH2 0x75E PUSH1 0x0 PUSH2 0x515 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x816 JUMPI DUP1 PUSH1 0x20 DUP12 DUP11 DUP11 PUSH2 0x7A0 PUSH2 0x79B DUP7 DUP14 PUSH2 0x795 PUSH2 0x790 DUP16 SWAP12 DUP16 SWAP13 PUSH2 0x78A PUSH2 0x7CA SWAP15 PUSH2 0x379 JUMP JUMPDEST SWAP10 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST SWAP5 PUSH2 0x65E JUMP JUMPDEST PUSH2 0x67D JUMP JUMPDEST SWAP3 PUSH2 0x7AA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 SWAP8 DUP2 SWAP6 DUP3 SWAP5 PUSH2 0x7BE PUSH4 0x23B872DD PUSH1 0xE0 SHL SWAP1 JUMP JUMPDEST DUP5 MSTORE CALLER PUSH1 0x4 DUP6 ADD PUSH2 0x6ED JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x605 JUMPI PUSH2 0x7E5 SWAP3 PUSH2 0x7EA JUMPI JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x75E JUMP JUMPDEST PUSH2 0x80A SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x80F JUMPI JUMPDEST PUSH2 0x802 DUP2 DUP4 PUSH2 0x69D JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x6D9 JUMP JUMPDEST PUSH2 0x7DE JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x7F8 JUMP JUMPDEST POP SWAP6 POP SWAP7 POP POP POP POP POP PUSH32 0xE4E3577249108DAAA0A07E6D9AABC5FEF8E89EC09DA3F9DCCFE7EF215E4EFC12 SWAP2 PUSH2 0x856 PUSH2 0x84D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP3 DUP4 SWAP3 DUP4 PUSH2 0x71B JUMP JUMPDEST SUB SWAP1 LOG1 JUMP JUMPDEST SWAP1 PUSH2 0x163 SWAP5 SWAP4 SWAP3 SWAP2 PUSH2 0x59F JUMP JUMPDEST PUSH2 0x870 PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x163 PUSH2 0x88E JUMP JUMPDEST PUSH2 0x120 PUSH2 0x12C PUSH2 0x12C SWAP3 SWAP1 JUMP JUMPDEST PUSH2 0x12C SWAP1 PUSH2 0x878 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x89B PUSH1 0x0 PUSH2 0x885 JUMP JUMPDEST PUSH2 0xCC9 JUMP JUMPDEST PUSH2 0x163 PUSH2 0x868 JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH2 0x8B4 PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x8E6 JUMP JUMPDEST ISZERO PUSH2 0x112 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH2 0x50B JUMP JUMPDEST SWAP1 PUSH2 0x8DF PUSH2 0x12C PUSH2 0x539 SWAP3 PUSH2 0x379 JUMP JUMPDEST DUP3 SLOAD PUSH2 0x8C0 JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH2 0x90F PUSH2 0x8FF PUSH2 0x8FA PUSH1 0x0 PUSH2 0x885 JUMP JUMPDEST PUSH2 0x120 JUMP JUMPDEST PUSH2 0x908 DUP4 PUSH2 0x120 JUMP JUMPDEST EQ ISZERO PUSH2 0x8B9 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH2 0x8A8 JUMP JUMPDEST SWAP3 SWAP2 SWAP1 PUSH2 0x92B CALLER PUSH2 0xC11 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x989 JUMPI JUMPDEST PUSH2 0x93B SWAP1 PUSH2 0x562 JUMP JUMPDEST PUSH2 0x947 PUSH2 0x5C8 CALLER PUSH2 0xC11 JUMP JUMPDEST PUSH2 0x955 JUMPI JUMPDEST PUSH2 0x163 SWAP4 PUSH2 0x9A4 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x96A PUSH2 0x5EF PUSH2 0x5EF PUSH1 0x1 PUSH2 0x589 JUMP JUMPDEST DUP2 SWAP1 CALLVALUE ISZERO PUSH2 0x97F JUMPI JUMPDEST CALLVALUE SWAP2 CALL PUSH2 0x94C JUMPI PUSH2 0x593 JUMP JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0x973 JUMP JUMPDEST POP PUSH2 0x93B PUSH2 0x99A PUSH2 0x12C PUSH1 0x2 PUSH2 0x558 JUMP JUMPDEST CALLVALUE LT ISZERO SWAP1 POP PUSH2 0x932 JUMP JUMPDEST SWAP3 SWAP2 PUSH2 0x9AF DUP5 PUSH2 0x379 JUMP JUMPDEST PUSH1 0x0 SWAP6 PUSH2 0x9BC PUSH1 0x0 PUSH2 0x515 JUMP JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xA0B JUMPI PUSH2 0x9EC SWAP1 PUSH1 0x20 DUP8 PUSH2 0x9D4 DUP7 PUSH2 0x379 JUMP JUMPDEST PUSH2 0x9E2 PUSH2 0x790 DUP6 DUP11 DUP13 PUSH2 0x65E JUMP JUMPDEST DUP13 PUSH2 0x7AA PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SUB SWAP3 GAS CALL SWAP2 DUP3 ISZERO PUSH2 0x605 JUMPI PUSH2 0xA06 SWAP3 PUSH2 0x7EA JUMPI POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0x9BC JUMP JUMPDEST POP SWAP6 POP POP PUSH32 0xE4E3577249108DAAA0A07E6D9AABC5FEF8E89EC09DA3F9DCCFE7EF215E4EFC12 SWAP4 SWAP3 POP PUSH2 0xA3B SWAP2 POP SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x856 PUSH2 0x84D PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0x163 SWAP4 SWAP3 SWAP2 PUSH2 0x91F JUMP JUMPDEST PUSH2 0x12C PUSH1 0x0 PUSH2 0x589 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 DUP2 ADD SWAP3 SWAP2 PUSH2 0x163 SWAP2 PUSH1 0x20 ADD MSTORE JUMP JUMPDEST ISZERO PUSH2 0xA7A JUMPI POP POP JUMP JUMPDEST PUSH3 0xFAE2D5 PUSH1 0xE2 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP2 PUSH2 0x57B SWAP2 PUSH1 0x4 PUSH2 0xA5E JUMP JUMPDEST ISZERO PUSH2 0xA99 JUMPI JUMP JUMPDEST PUSH4 0x24B964D PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0xFF SWAP1 PUSH2 0x50B JUMP JUMPDEST SWAP1 PUSH2 0xAC4 PUSH2 0x12C PUSH2 0x539 SWAP3 ISZERO ISZERO SWAP1 JUMP JUMPDEST DUP3 SLOAD PUSH2 0xAAB JUMP JUMPDEST PUSH2 0xAF0 PUSH2 0xADB PUSH2 0x12C PUSH1 0x3 PUSH2 0x558 JUMP JUMPDEST CALLVALUE LT ISZERO PUSH2 0xAE8 PUSH1 0x3 PUSH2 0x558 JUMP JUMPDEST SWAP1 CALLVALUE SWAP1 PUSH2 0xA71 JUMP JUMPDEST PUSH2 0xB04 PUSH2 0xAFF PUSH2 0x5C8 CALLER PUSH2 0xC11 JUMP JUMPDEST PUSH2 0xA92 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0xB19 PUSH2 0x5EF PUSH2 0x5EF PUSH1 0x1 PUSH2 0x589 JUMP JUMPDEST DUP2 SWAP1 CALLVALUE ISZERO PUSH2 0xB75 JUMPI JUMPDEST CALLVALUE SWAP2 CALL ISZERO PUSH2 0x605 JUMPI PUSH2 0xB3F PUSH1 0x1 PUSH2 0xB3A CALLER PUSH1 0x4 PUSH2 0x382 JUMP JUMPDEST PUSH2 0xAB4 JUMP JUMPDEST PUSH32 0x6252330B8AC495908D7082DBCF6CD547AFFFF5896884E8CB9C40D1B216F9F8E8 PUSH2 0xB69 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST DUP1 PUSH2 0x856 CALLVALUE CALLER DUP4 PUSH2 0x71B JUMP JUMPDEST PUSH2 0x8FC SWAP2 POP PUSH2 0xB22 JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH2 0xB8B PUSH2 0xC8C JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH1 0x2 PUSH2 0x522 JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH2 0xB7F JUMP JUMPDEST PUSH2 0x163 SWAP1 PUSH2 0xBAB PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBB6 DUP2 PUSH2 0x885 JUMP JUMPDEST PUSH2 0xBBF DUP2 PUSH2 0x120 JUMP JUMPDEST PUSH2 0xBC8 DUP5 PUSH2 0x120 JUMP JUMPDEST EQ PUSH2 0xBD8 JUMPI POP POP PUSH2 0x163 SWAP1 PUSH2 0xCC9 JUMP JUMPDEST PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP3 MSTORE DUP2 SWAP1 PUSH2 0xBF1 SWAP1 PUSH1 0x4 DUP4 ADD PUSH2 0x153 JUMP JUMPDEST SUB SWAP1 REVERT JUMPDEST PUSH2 0x163 SWAP1 PUSH2 0xB9F JUMP JUMPDEST PUSH2 0x12C SWAP1 PUSH2 0x3A3 JUMP JUMPDEST PUSH2 0x12C SWAP1 SLOAD PUSH2 0xBFE JUMP JUMPDEST PUSH2 0xC28 PUSH2 0x12C SWAP2 PUSH2 0xC20 PUSH1 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x382 JUMP JUMPDEST PUSH2 0xC07 JUMP JUMPDEST SWAP1 PUSH2 0x163 SWAP2 PUSH2 0xC3A PUSH2 0xC8C JUMP JUMPDEST PUSH1 0x0 SWAP3 SWAP2 PUSH2 0xC47 DUP5 PUSH2 0x515 JUMP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC7B JUMPI PUSH2 0xC76 SWAP1 PUSH2 0xC70 DUP7 PUSH2 0xB3A PUSH1 0x4 PUSH2 0xC6A PUSH2 0x790 DUP7 DUP10 DUP12 PUSH2 0x65E JUMP JUMPDEST SWAP1 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH2 0xC47 JUMP JUMPDEST POP POP POP SWAP1 POP JUMP JUMPDEST SWAP1 PUSH2 0x163 SWAP2 PUSH2 0xC2D JUMP JUMPDEST PUSH2 0xC94 PUSH2 0xA54 JUMP JUMPDEST CALLER SWAP1 PUSH2 0xCA8 PUSH2 0xCA2 DUP4 PUSH2 0x120 JUMP JUMPDEST SWAP2 PUSH2 0x120 JUMP JUMPDEST SUB PUSH2 0xCB0 JUMPI POP JUMP JUMPDEST PUSH4 0x118CDAA7 PUSH1 0xE0 SHL PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP1 PUSH2 0x57B SWAP1 PUSH1 0x4 PUSH2 0x153 JUMP JUMPDEST PUSH2 0xCEA PUSH2 0xCE4 PUSH2 0xCD9 PUSH1 0x0 PUSH2 0x589 JUMP JUMPDEST PUSH2 0x5EF DUP5 PUSH1 0x0 PUSH2 0x8CF JUMP JUMPDEST SWAP2 PUSH2 0x379 JUMP JUMPDEST SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH2 0xD15 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SWAP1 LOG3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE 0xBE PUSH8 0x21677B59EFE3BA05 0x4D 0xCF 0x2E 0xC9 0x24 0xF9 0xE9 0x4F SUB 0xBD TSTORE 0xD1 SWAP10 0xC XOR SGT SWAP9 0xBE 0xDA EXTCODESIZE BLOBBASEFEE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
              "sourceMap": "165:3061:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;-1:-1:-1;;;;;165:3061:3;;;;;:::o;:::-;;;;;;:::i;224:30::-;;;;;:::i;165:3061::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;165:3061:3;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;-1:-1:-1;;;;;165:3061:3;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;334:39::-;;;;;;;:::i;:::-;;:::i;165:3061::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;261:30::-;;;;;:::i;165:3061::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;297:30::-;;;;;:::i;165:3061::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;165:3061:3:-;;-1:-1:-1;;165:3061:3;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;1721:77::-;1778:13;1721:77;1778:13;;:::i;1721:77::-;;;;:::i;165:3061::-;;;;;;;;;;:::i;:::-;;;;:::o;:::-;-1:-1:-1;;;165:3061:3;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;380:228;;;;;427:17;433:10;427:17;:::i;:::-;:39;;;;380:228;419:69;;;:::i;:::-;502:18;503:17;433:10;503:17;:::i;:::-;502:18;;165:3061;502:18;498:93;;380:228;600:1;;;:::i;498:93::-;536:44;544:15;;;536:33;:24;544:15;;;:::i;:::-;536:24;:::i;:33::-;:44;570:9;;536:44;;;498:93;570:9;536:44;;498:93;536:44;;;:::i;:::-;;;-1:-1:-1;536:44:3;;427:39;461:5;419:69;448:18;461:5;;;:::i;448:18::-;:9;:18;;427:39;;;;165:3061;;;;:::o;:::-;-1:-1:-1;;;165:3061:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;165:3061:3;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;2744:478::-;;;;;;2928:14;2899:60;2928:14;2907:35;;2899:60;:::i;:::-;2984:21;;;:::i;:::-;3038:1;;3029:10;;3038:1;3029:10;:::i;:::-;3041:21;;;;;;3083:18;:57;:18;;;3129:10;;3083:18;;3114:13;;3083:18;;;;;:57;:18;;:::i;:::-;3114:13;;:::i;:::-;;:::i;:::-;3129:10;;:::i;:::-;;:::i;:::-;3083:57;;165:3061;;;;3083:57;;;;;;;;:18;165:3061;;;;3083:57;;;3102:10;3083:57;;;;:::i;:::-;;;;;;;;;;3064:3;3083:57;;;3064:3;;165:3061;;;;3064:3;3029:10;;3083:57;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;3041:21;;;;;;;;;;3165:50;3041:21;3165:50;;165:3061;;;;3165:50;;;;;;:::i;:::-;;;;2744:478::o;:::-;;;;;;;;:::i;1500:62:0:-;;;:::i;:::-;1554:1;;:::i;165:3061:3:-;;;;;;;;;;;:::i;2293:101:0:-;2376:10;;2384:1;2376:10;:::i;:::-;;:::i;2293:101::-;;;:::i;1500:62::-;1554:1;1500:62;;;:::i;:::-;1554:1;:::i;165:3061:3:-;;;;:::o;:::-;;-1:-1:-1;;;;;165:3061:3;;;;;;;;;;:::i;:::-;;;;:::i;1537:138::-;1645:23;1537:138;1607:28;1615:19;1624:10;1632:1;1624:10;:::i;:::-;1615:19;:::i;:::-;;;;:::i;:::-;;;1607:28;:::i;:::-;1645:23;;:::i;1537:138::-;;;;:::i;380:228::-;;;;427:17;433:10;427:17;:::i;:::-;:39;;;;380:228;419:69;;;:::i;:::-;502:18;503:17;433:10;503:17;:::i;502:18::-;498:93;;380:228;600:1;;;:::i;498:93::-;536:44;544:15;;;536:33;:24;544:15;;;:::i;536:33::-;:44;570:9;;536:44;;;498:93;570:9;536:44;;498:93;536:44;;:::i;:::-;;;-1:-1:-1;536:44:3;;427:39;461:5;419:69;448:18;461:5;;;:::i;448:18::-;:9;:18;;427:39;;;;2135:384;;;2293:21;;;:::i;:::-;2339:1;2330:10;;2339:1;2330:10;:::i;:::-;2346:17;2342:21;;;;;2384:53;:18;:53;:18;;;;:::i;:::-;2415:13;;;;;;:::i;:::-;2384:53;;165:3061;;;;2384:53;;;;;;;;;;2365:3;2384:53;;;2365:3;165:3061;;;;2365:3;2330:10;;2342:21;;;;;2462:50;2342:21;;;2494:17;2342:21;165:3061;;;2494:17;2462:50;;;165:3061;;;;2135:384;;;;;;;:::i;1638:85:0:-;1710:6;;;:::i;165:3061:3:-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;-1:-1:-1;;;165:3061:3;;;;;;;;;:::i;:::-;;;;:::o;:::-;-1:-1:-1;;;165:3061:3;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;763:324::-;811:66;819:19;832:6;;;:::i;819:19::-;:9;:19;;869:6;;;:::i;:::-;819:9;;811:66;;:::i;:::-;887:41;895:18;896:17;902:10;896:17;:::i;895:18::-;887:41;:::i;:::-;938:44;946:15;;;938:33;:24;946:15;;;:::i;938:33::-;:44;819:9;;938:44;;;763:324;819:9;938:44;;;;;1000:26;1022:4;1000:19;902:10;1000:7;:19;:::i;:::-;:26;:::i;:::-;1041:39;;165:3061;;;;1041:39;819:9;1041:39;819:9;902:10;1041:39;;:::i;938:44::-;;;-1:-1:-1;938:44:3;;1500:62:0;1554:1;1500:62;;;:::i;:::-;1900:12:3;1844:75;1900:12;;:::i;1844:75::-;;;;:::i;1500:62:0:-;1554:1;1500:62;;;:::i;:::-;2647:1;2639:10;;;:::i;:::-;2627:22;;;:::i;:::-;;;;:::i;:::-;;2623:91;;2742:8;;;;;:::i;2623:91::-;-1:-1:-1;;;2672:31:0;;;;;;;;;;:::i;:::-;;;;2543:215;;;;:::i;165:3061:3:-;;;;;;;;;;:::i;1392:94::-;1465:14;;1392:94;1442:4;165:3061;;;1442:4;1465:14;:7;:14;:::i;:::-;;:::i;1500:62:0:-;;1554:1;1500:62;;;:::i;:::-;1246:1:3;;1149:185;1237:10;1246:1;1237:10;:::i;:::-;1253:15;1249:19;;;;;1270:3;1289:7;:28;:7;:20;:7;1297:11;;;;;;:::i;:::-;1289:20;;:::i;:28::-;165:3061;;;;1270:3;1237:10;;1249:19;;;;;;1149:185::o;:::-;;;;;:::i;1796:162:0:-;1855:7;;:::i;:::-;735:10:2;1855:23:0;;;;;:::i;:::-;;;:::i;:::-;;1851:101;;1796:162;:::o;1851:101::-;-1:-1:-1;;;1901:40:0;;;;;;;;;:::i;2912:187::-;3052:40;;3004:6;;;:::i;:::-;3020:17;;;;:::i;3052:40::-;;;:::i;:::-;;;;165:3061:3;;;;3052:40:0;;;;2912:187::o"
            },
            "methodIdentifiers": {
              "VIPFee()": "f0a0a299",
              "bulkTransferERC20(address,address[],uint256)": "8ce632e8",
              "bulkTransferERC20(address,address[],uint256[])": "3e46cd53",
              "isVIP(address)": "f4201c3c",
              "owner()": "8da5cb5b",
              "receiverAddress()": "16fed3e2",
              "registerVIP()": "9c1f6133",
              "removeFromVIPList(address[])": "f48d11af",
              "renounceOwnership()": "715018a6",
              "setReceiverAddress(address)": "8279c7db",
              "setTxFee(uint256)": "f05d16f7",
              "setVIPFee(uint256)": "3d06242a",
              "transferOwnership(address)": "f2fde38b",
              "txFee()": "cf820461",
              "vipList(address)": "aa168b47"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_receiverAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AlreadyContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyNormalAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyVIP\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAllowedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"NotEnoughEther\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"NotEnoughTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotNormalAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotVIP\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"LogGetToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"LogTokenBulkSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"LogViPRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"VIPFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"_values\",\"type\":\"uint256[]\"}],\"name\":\"bulkTransferERC20\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_receivers\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"bulkTransferERC20\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isVIP\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerVIP\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_vipList\",\"type\":\"address[]\"}],\"name\":\"removeFromVIPList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"setReceiverAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setTxFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setVIPFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"txFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vipList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"bulkTransferERC20(address,address[],uint256)\":{\"details\":\"bulk transfer erc20 tokens with same value\",\"params\":{\"_receivers\":\"array of receivers\",\"_tokenAddress\":\"address of the token\",\"_value\":\"amount of tokens to send\"}},\"bulkTransferERC20(address,address[],uint256[])\":{\"details\":\"bulk transfer erc20 tokens with different values\",\"params\":{\"_receivers\":\"array of receivers\",\"_tokenAddress\":\"address of the token\",\"_values\":\"amounts of tokens to send\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BulkSender.sol\":\"BulkSender\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/BulkSender.sol\":{\"keccak256\":\"0x53e7ac206731de70e15165fbdde7713a2b8393364b44f514e649937f9450be17\",\"urls\":[\"bzz-raw://e38deaa4062c39229873b081ff0c49c35e657da7cc5aa8ebde26834fe1cbeb56\",\"dweb:/ipfs/Qmdc2TLzvZwkojT7cfcA3j4arUuBwzKUhRNyFLPgyP4Dyq\"]},\"contracts/IBulkSender.sol\":{\"keccak256\":\"0xad006924b8049e9f514d1c293a7792e8e60d0f64a29848ac3fb6dcbaec048cac\",\"urls\":[\"bzz-raw://cfad130edb5f8b8e0ccbd280c7a02d9b6f1d43a20be014687c12517fbc64c37b\",\"dweb:/ipfs/QmfC812H7KxfPazWFecgF6ZL7YSa9D6Revha9J9V57KE8k\"]}},\"version\":1}"
        }
      },
      "contracts/IBulkSender.sol": {
        "IBulkSender": {
          "abi": [
            {
              "inputs": [],
              "name": "AlreadyContract",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "AlreadyNormalAddress",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "AlreadyOwner",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "AlreadyToken",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "AlreadyVIP",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "available",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "required",
                  "type": "uint256"
                }
              ],
              "name": "InsufficientAllowance",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "available",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "required",
                  "type": "uint256"
                }
              ],
              "name": "InsufficientFunds",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidInput",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotAllowedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotContract",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "available",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "required",
                  "type": "uint256"
                }
              ],
              "name": "NotEnoughEther",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "available",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "required",
                  "type": "uint256"
                }
              ],
              "name": "NotEnoughTokens",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotNormalAddress",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotOwner",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotToken",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NotVIP",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "Unauthorized",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ZeroAddress",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "balance",
                  "type": "uint256"
                }
              ],
              "name": "LogGetToken",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "total",
                  "type": "uint256"
                }
              ],
              "name": "LogTokenBulkSent",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "LogViPRegistered",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "registerVIP",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address[]",
                  "name": "_vipList",
                  "type": "address[]"
                }
              ],
              "name": "removeFromVIPList",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "registerVIP()": "9c1f6133",
              "removeFromVIPList(address[])": "f48d11af"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyContract\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyNormalAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyVIP\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"InsufficientFunds\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInput\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAllowedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotContract\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"NotEnoughEther\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"required\",\"type\":\"uint256\"}],\"name\":\"NotEnoughTokens\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotNormalAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotVIP\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"LogGetToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"total\",\"type\":\"uint256\"}],\"name\":\"LogTokenBulkSent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"LogViPRegistered\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"registerVIP\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_vipList\",\"type\":\"address[]\"}],\"name\":\"removeFromVIPList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBulkSender.sol\":\"IBulkSender\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"simpleCounterForLoopUncheckedIncrement\":true,\"yul\":true,\"yulDetails\":{\"optimizerSteps\":\"u:fDnTOcmuO\",\"stackAllocation\":true}},\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"contracts/IBulkSender.sol\":{\"keccak256\":\"0xad006924b8049e9f514d1c293a7792e8e60d0f64a29848ac3fb6dcbaec048cac\",\"urls\":[\"bzz-raw://cfad130edb5f8b8e0ccbd280c7a02d9b6f1d43a20be014687c12517fbc64c37b\",\"dweb:/ipfs/QmfC812H7KxfPazWFecgF6ZL7YSa9D6Revha9J9V57KE8k\"]}},\"version\":1}"
        }
      }
    }
  }
}